ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.delay,"ax",%progbits
  19              		.align	1
  20              		.global	delay
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	delay:
  26              	.LVL0:
  27              	.LFB45:
  28              		.file 2 "Core/Inc/lcd_stm32f0.c"
   1:Core/Inc/lcd_stm32f0.c **** //********************************************************************
   2:Core/Inc/lcd_stm32f0.c **** //*                      EEE2046F STM32F0                            *
   3:Core/Inc/lcd_stm32f0.c **** //*                         LCD MODULE                               *
   4:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
   5:Core/Inc/lcd_stm32f0.c **** //* WRITTEN BY:    Copyright (C) Samuel Ginsberg 2004                *
   6:Core/Inc/lcd_stm32f0.c **** //* PORTED TO STM32F0 dev board by James Gowans, 2014                *
   7:Core/Inc/lcd_stm32f0.c **** //* MODIFIED BY:   Robyn Verrinder                                   *
   8:Core/Inc/lcd_stm32f0.c **** //* DATE CREATED:  2004                                              *
   9:Core/Inc/lcd_stm32f0.c **** //* PORTED:	   2014						     *
  10:Core/Inc/lcd_stm32f0.c **** //* MODIFIED:      03-08-2015                                        *
  11:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  12:Core/Inc/lcd_stm32f0.c **** //* PROGRAMMED IN: ECLIPSE IDE Luna Service Release 1 (4.4.1)        *
  13:Core/Inc/lcd_stm32f0.c **** //* DEV. BOARD:    UCT STM32 Development Board                       *
  14:Core/Inc/lcd_stm32f0.c **** //* TARGET:	   STMicroelectronics STM32F051C6                    *
  15:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  16:Core/Inc/lcd_stm32f0.c **** //* DESCRIPTION:   This code contains common functions to communicate*
  17:Core/Inc/lcd_stm32f0.c **** //*                with the LCD module connected to the STM32 uC.    *
  18:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  19:Core/Inc/lcd_stm32f0.c **** //* LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used) *
  20:Core/Inc/lcd_stm32f0.c **** //*                - Two lines used                                  *
  21:Core/Inc/lcd_stm32f0.c **** //*                - Flashing cursor                                 *
  22:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  23:Core/Inc/lcd_stm32f0.c **** //* CONNECTIONS:                                                     *
  24:Core/Inc/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  25:Core/Inc/lcd_stm32f0.c **** //* LCD PINS   | NAME                    | CONNECTED TO              *
  26:Core/Inc/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  27:Core/Inc/lcd_stm32f0.c **** //* 1............VSS.......................GND                       *
  28:Core/Inc/lcd_stm32f0.c **** //* 2............VDD.......................+5V                       *
  29:Core/Inc/lcd_stm32f0.c **** //* 3............CONTRAST..................POT 2                     *
  30:Core/Inc/lcd_stm32f0.c **** //* 4............RS  - Register Select.....PC14 (LCD_RS)             *
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 2


  31:Core/Inc/lcd_stm32f0.c **** //* 5............RW  - Read/Write..........GND                       *
  32:Core/Inc/lcd_stm32f0.c **** //* 6............E   - Enable..............PC15 (LCD_E)              *
  33:Core/Inc/lcd_stm32f0.c **** //* 7............D0  - Data line 0.........GND                       *
  34:Core/Inc/lcd_stm32f0.c **** //* 8............D1  - Data line 1.........GND                       *
  35:Core/Inc/lcd_stm32f0.c **** //* 9............D2  - Data line 2.........GND                       *
  36:Core/Inc/lcd_stm32f0.c **** //* 10...........D3  - Data line 3.........GND                       *
  37:Core/Inc/lcd_stm32f0.c **** //* 11...........D4  - Data line 4.........PB8  (LCD_D4)             *
  38:Core/Inc/lcd_stm32f0.c **** //* 12...........D5  - Data line 5.........PB9  (LCD_D5)             *
  39:Core/Inc/lcd_stm32f0.c **** //* 13...........D6  - Data line 6.........PA12 (LCD_D6)             *
  40:Core/Inc/lcd_stm32f0.c **** //* 14...........D7  - Data line 7.........PA15 (LCD_D7)             *
  41:Core/Inc/lcd_stm32f0.c **** //* 15...........CATHLED...................NC                        *
  42:Core/Inc/lcd_stm32f0.c **** //* 16...........ANODELED..................NC                        *
  43:Core/Inc/lcd_stm32f0.c **** //********************************************************************
  44:Core/Inc/lcd_stm32f0.c **** // INCLUDE FILES
  45:Core/Inc/lcd_stm32f0.c **** //====================================================================
  46:Core/Inc/lcd_stm32f0.c **** #include "lcd_stm32f0.h"
  47:Core/Inc/lcd_stm32f0.c **** #include "stm32f0xx.h"
  48:Core/Inc/lcd_stm32f0.c **** //====================================================================
  49:Core/Inc/lcd_stm32f0.c **** // SEND COMMAND CODE TO LCD - LCD_Command(command)
  50:Core/Inc/lcd_stm32f0.c **** //====================================================================
  51:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: This function sends a command to the LCD. Care is taken
  52:Core/Inc/lcd_stm32f0.c **** //              not to interfere with the other lines on the port.
  53:Core/Inc/lcd_stm32f0.c **** //
  54:Core/Inc/lcd_stm32f0.c **** //              As we are using a microcontroller to control the LCD
  55:Core/Inc/lcd_stm32f0.c **** //              we use 4-bit mode to save on number of lines used to
  56:Core/Inc/lcd_stm32f0.c **** //              connect to the LCD. This means that an 8-bit command
  57:Core/Inc/lcd_stm32f0.c **** //              must be split into two sets of 4-bits (upper and lower)
  58:Core/Inc/lcd_stm32f0.c **** //              These sets must be transmitted
  59:Core/Inc/lcd_stm32f0.c **** //====================================================================
  60:Core/Inc/lcd_stm32f0.c **** // USEFUL COMMANDS:
  61:Core/Inc/lcd_stm32f0.c **** //                  - POWER_UP:      Power up initialization for the lcd
  62:Core/Inc/lcd_stm32f0.c **** //                  - FOURBIT_MODE:  Sets LCD for 4-bit mode
  63:Core/Inc/lcd_stm32f0.c **** //                  - TWOLINE_MODE:  Sets up 2 lines and character size
  64:Core/Inc/lcd_stm32f0.c **** //                  - SETUP_CURSOR:  Turn display on and set up cursor
  65:Core/Inc/lcd_stm32f0.c **** //                  - CLEAR:         Clear screen
  66:Core/Inc/lcd_stm32f0.c **** //                  - CURSOR_HOME:   Cursor home
  67:Core/Inc/lcd_stm32f0.c **** //                  - LINE_TWO:      Line 2
  68:Core/Inc/lcd_stm32f0.c **** //
  69:Core/Inc/lcd_stm32f0.c **** //====================================================================
  70:Core/Inc/lcd_stm32f0.c **** 
  71:Core/Inc/lcd_stm32f0.c **** void lcd_command(unsigned char command)
  72:Core/Inc/lcd_stm32f0.c **** {
  73:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
  74:Core/Inc/lcd_stm32f0.c **** 
  75:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
  76:Core/Inc/lcd_stm32f0.c **** // DATALINE 7
  77:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x80) != 0)		// Select bit 7 of command, if HIGH set Data line 7 (D7) 
  78:Core/Inc/lcd_stm32f0.c ****     {
  79:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
  80:Core/Inc/lcd_stm32f0.c ****     }
  81:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D7
  82:Core/Inc/lcd_stm32f0.c ****     {
  83:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
  84:Core/Inc/lcd_stm32f0.c ****     }
  85:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
  86:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x40) != 0)		// Select bit 6 of command, if HIGH set Data line 6 (D6) 
  87:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 3


  88:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
  89:Core/Inc/lcd_stm32f0.c ****     }
  90:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D6
  91:Core/Inc/lcd_stm32f0.c ****     {
  92:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
  93:Core/Inc/lcd_stm32f0.c ****     }
  94:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
  95:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x20) != 0)		// Select bit 5 of command, if HIGH set Data line 5 (D5)
  96:Core/Inc/lcd_stm32f0.c ****     {
  97:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;	
  98:Core/Inc/lcd_stm32f0.c ****     }
  99:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D5
 100:Core/Inc/lcd_stm32f0.c ****     {
 101:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 102:Core/Inc/lcd_stm32f0.c ****     }
 103:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 104:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x10) != 0)		// Select bit 4 of command, if HIGH set Data line 4 (D4)
 105:Core/Inc/lcd_stm32f0.c ****     {
 106:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
 107:Core/Inc/lcd_stm32f0.c ****     }
 108:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D4
 109:Core/Inc/lcd_stm32f0.c ****     {
 110:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 111:Core/Inc/lcd_stm32f0.c ****     }
 112:Core/Inc/lcd_stm32f0.c **** 
 113:Core/Inc/lcd_stm32f0.c ****     pulse_strobe ();			// Send data
 114:Core/Inc/lcd_stm32f0.c **** 
 115:Core/Inc/lcd_stm32f0.c **** // lower nibble to data lines
 116:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x08) != 0)		// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 117:Core/Inc/lcd_stm32f0.c ****     {
 118:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
 119:Core/Inc/lcd_stm32f0.c ****     }
 120:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D7
 121:Core/Inc/lcd_stm32f0.c ****     {
 122:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
 123:Core/Inc/lcd_stm32f0.c ****     }
 124:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
 125:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x04) != 0)		// Select bit 2 of command, if HIGH set Data line 6 (D6)
 126:Core/Inc/lcd_stm32f0.c ****     {
 127:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
 128:Core/Inc/lcd_stm32f0.c ****     }
 129:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D6
 130:Core/Inc/lcd_stm32f0.c ****     {
 131:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
 132:Core/Inc/lcd_stm32f0.c ****     }
 133:Core/Inc/lcd_stm32f0.c ****     // DATALINE 5
 134:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x02) != 0)		// Select bit 1 of command, if HIGH set Data line 5 (D5)
 135:Core/Inc/lcd_stm32f0.c ****     {
 136:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;         
 137:Core/Inc/lcd_stm32f0.c ****     }
 138:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D5
 139:Core/Inc/lcd_stm32f0.c ****     {
 140:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 141:Core/Inc/lcd_stm32f0.c ****     }
 142:Core/Inc/lcd_stm32f0.c ****     // DATALINE 4
 143:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x01) != 0)		// Select bit 0 of command, if HIGH set Data line 4 (D4)
 144:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 4


 145:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
 146:Core/Inc/lcd_stm32f0.c ****     }
 147:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D4
 148:Core/Inc/lcd_stm32f0.c ****     {
 149:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 150:Core/Inc/lcd_stm32f0.c ****     }
 151:Core/Inc/lcd_stm32f0.c **** 
 152:Core/Inc/lcd_stm32f0.c ****     pulse_strobe();			// Send data
 153:Core/Inc/lcd_stm32f0.c ****     delay(3000);
 154:Core/Inc/lcd_stm32f0.c **** }
 155:Core/Inc/lcd_stm32f0.c **** 
 156:Core/Inc/lcd_stm32f0.c **** //====================================================================
 157:Core/Inc/lcd_stm32f0.c **** // INITIALISE LCD - LCD_Init()
 158:Core/Inc/lcd_stm32f0.c **** //====================================================================
 159:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: This function sets up the port lines for the LCD and
 160:Core/Inc/lcd_stm32f0.c **** //              intialises the module for use.
 161:Core/Inc/lcd_stm32f0.c **** //====================================================================
 162:Core/Inc/lcd_stm32f0.c **** // LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used)
 163:Core/Inc/lcd_stm32f0.c **** //                - Two lines used
 164:Core/Inc/lcd_stm32f0.c **** //                - Flashing cursor
 165:Core/Inc/lcd_stm32f0.c **** //====================================================================
 166:Core/Inc/lcd_stm32f0.c **** 
 167:Core/Inc/lcd_stm32f0.c **** void init_LCD(void)
 168:Core/Inc/lcd_stm32f0.c **** {
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 171:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 172:Core/Inc/lcd_stm32f0.c **** 
 173:Core/Inc/lcd_stm32f0.c ****     GPIOA->MODER |= (GPIO_MODER_MODER12_0|GPIO_MODER_MODER15_0); // D6 and D7
 174:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 175:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 176:Core/Inc/lcd_stm32f0.c **** 
 177:Core/Inc/lcd_stm32f0.c ****     delay(30000);			// Allow the LCD some power up time (~30ms)
 178:Core/Inc/lcd_stm32f0.c **** 
 179:Core/Inc/lcd_stm32f0.c ****     lcd_command(POWER_UP);		// Power up initialization for the lcd
 180:Core/Inc/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 181:Core/Inc/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 182:Core/Inc/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 183:Core/Inc/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 184:Core/Inc/lcd_stm32f0.c **** }
 185:Core/Inc/lcd_stm32f0.c **** 
 186:Core/Inc/lcd_stm32f0.c **** //====================================================================
 187:Core/Inc/lcd_stm32f0.c **** // WRITE A SINGLE CHARACTER TO THE LCD - LCD_PutChar(character)
 188:Core/Inc/lcd_stm32f0.c **** //====================================================================
 189:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Puts a single character on the LCD at the next position
 190:Core/Inc/lcd_stm32f0.c **** //              on the screen. The character to be printed is in the input
 191:Core/Inc/lcd_stm32f0.c **** //              parameter. For numbers, letters and other common characters
 192:Core/Inc/lcd_stm32f0.c **** //              the ASCII code will produce correct display.
 193:Core/Inc/lcd_stm32f0.c **** //
 194:Core/Inc/lcd_stm32f0.c **** //              Refer to the Hitachi HD44780 datasheet for full character
 195:Core/Inc/lcd_stm32f0.c **** //              set information.
 196:Core/Inc/lcd_stm32f0.c **** //====================================================================
 197:Core/Inc/lcd_stm32f0.c **** 
 198:Core/Inc/lcd_stm32f0.c ****  void lcd_putchar(unsigned char character)
 199:Core/Inc/lcd_stm32f0.c **** {
 200:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 201:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 5


 202:Core/Inc/lcd_stm32f0.c **** // DATALINE 7
 203:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x80) != 0) 	// Select bit 7 of command, if HIGH set Data line 7 (D7)
 204:Core/Inc/lcd_stm32f0.c ****         {
 205:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 206:Core/Inc/lcd_stm32f0.c ****         }
 207:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D7
 208:Core/Inc/lcd_stm32f0.c ****         {
 209:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 210:Core/Inc/lcd_stm32f0.c ****         }
 211:Core/Inc/lcd_stm32f0.c ****         // DATALINE 6
 212:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x40) != 0)	// Select bit 6 of command, if HIGH set Data line 6 (D6)      
 213:Core/Inc/lcd_stm32f0.c **** 	{
 214:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 215:Core/Inc/lcd_stm32f0.c ****         }
 216:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D6
 217:Core/Inc/lcd_stm32f0.c **** 
 218:Core/Inc/lcd_stm32f0.c ****         {
 219:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 220:Core/Inc/lcd_stm32f0.c ****         }
 221:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
 222:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x20) != 0)	// Select bit 5 of command, if HIGH set Data line 5 (D5)
 223:Core/Inc/lcd_stm32f0.c **** 
 224:Core/Inc/lcd_stm32f0.c ****         {
 225:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;                 
 226:Core/Inc/lcd_stm32f0.c **** 	}
 227:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D5
 228:Core/Inc/lcd_stm32f0.c ****         {
 229:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 230:Core/Inc/lcd_stm32f0.c ****         }
 231:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 232:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x10) != 0)	// Select bit 4 of command, if HIGH set Data line 4 (D4) 
 233:Core/Inc/lcd_stm32f0.c ****         {
 234:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 235:Core/Inc/lcd_stm32f0.c ****         }
 236:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D4
 237:Core/Inc/lcd_stm32f0.c ****         {
 238:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 239:Core/Inc/lcd_stm32f0.c ****         }
 240:Core/Inc/lcd_stm32f0.c **** 
 241:Core/Inc/lcd_stm32f0.c ****         pulse_strobe ();		// Send data
 242:Core/Inc/lcd_stm32f0.c **** 
 243:Core/Inc/lcd_stm32f0.c **** // lower nibble to data lines
 244:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x08) != 0)	// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 245:Core/Inc/lcd_stm32f0.c ****         {
 246:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 247:Core/Inc/lcd_stm32f0.c ****         }
 248:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D7
 249:Core/Inc/lcd_stm32f0.c ****         {
 250:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 251:Core/Inc/lcd_stm32f0.c ****         }
 252:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
 253:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x04) != 0)	// Select bit 2 of command, if HIGH set Data line 6 (D6)      
 254:Core/Inc/lcd_stm32f0.c **** 	{
 255:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 256:Core/Inc/lcd_stm32f0.c ****         }
 257:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D6
 258:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 6


 259:Core/Inc/lcd_stm32f0.c ****         {
 260:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 261:Core/Inc/lcd_stm32f0.c ****         }
 262:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
 263:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x02) != 0)	// Select bit 1 of command, if HIGH set Data line 5 (D5)  
 264:Core/Inc/lcd_stm32f0.c ****         {
 265:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;       
 266:Core/Inc/lcd_stm32f0.c **** 	}
 267:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D5
 268:Core/Inc/lcd_stm32f0.c ****         {
 269:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 270:Core/Inc/lcd_stm32f0.c ****         }
 271:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 272:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x01) != 0)	// Select bit 0 of command, if HIGH set Data line 4 (D4)
 273:Core/Inc/lcd_stm32f0.c ****         {
 274:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 275:Core/Inc/lcd_stm32f0.c ****         }
 276:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D4
 277:Core/Inc/lcd_stm32f0.c ****         {
 278:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 279:Core/Inc/lcd_stm32f0.c ****         }
 280:Core/Inc/lcd_stm32f0.c **** 
 281:Core/Inc/lcd_stm32f0.c ****         pulse_strobe();			// Send data
 282:Core/Inc/lcd_stm32f0.c **** }
 283:Core/Inc/lcd_stm32f0.c **** 
 284:Core/Inc/lcd_stm32f0.c **** //====================================================================
 285:Core/Inc/lcd_stm32f0.c **** // WRITE A STRING TO THE LCD - LCD_PutString(ptr_String)
 286:Core/Inc/lcd_stm32f0.c **** //====================================================================
 287:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Writes a string to the LCD
 288:Core/Inc/lcd_stm32f0.c **** //====================================================================
 289:Core/Inc/lcd_stm32f0.c **** 
 290:Core/Inc/lcd_stm32f0.c **** void lcd_putstring(char *instring)
 291:Core/Inc/lcd_stm32f0.c **** {
 292:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 293:Core/Inc/lcd_stm32f0.c **** 
 294:Core/Inc/lcd_stm32f0.c ****     while (instring[count])		// Until the null terminator is reached
 295:Core/Inc/lcd_stm32f0.c ****     {
 296:Core/Inc/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 297:Core/Inc/lcd_stm32f0.c **** 	    count++;
 298:Core/Inc/lcd_stm32f0.c **** 	 }
 299:Core/Inc/lcd_stm32f0.c **** }
 300:Core/Inc/lcd_stm32f0.c **** 
 301:Core/Inc/lcd_stm32f0.c **** 
 302:Core/Inc/lcd_stm32f0.c **** //====================================================================
 303:Core/Inc/lcd_stm32f0.c **** // PULSE STROBE - Pulse_Strobe()
 304:Core/Inc/lcd_stm32f0.c **** //====================================================================
 305:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Pulse the strobe line of the LCD to indicate that data is ready.
 306:Core/Inc/lcd_stm32f0.c **** //====================================================================
 307:Core/Inc/lcd_stm32f0.c **** 
 308:Core/Inc/lcd_stm32f0.c **** void pulse_strobe(void)
 309:Core/Inc/lcd_stm32f0.c **** {
 310:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 311:Core/Inc/lcd_stm32f0.c **** 
 312:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// pull E (PC15) HIGH
 313:Core/Inc/lcd_stm32f0.c **** 
 314:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 315:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 7


 316:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_RESET;	// Take EN LOW
 317:Core/Inc/lcd_stm32f0.c **** 
 318:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 319:Core/Inc/lcd_stm32f0.c **** 
 320:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// Take EN HIGH
 321:Core/Inc/lcd_stm32f0.c **** }
 322:Core/Inc/lcd_stm32f0.c **** 
 323:Core/Inc/lcd_stm32f0.c **** 
 324:Core/Inc/lcd_stm32f0.c **** //====================================================================
 325:Core/Inc/lcd_stm32f0.c **** // LOOP DELAY - delay(microseconds)
 326:Core/Inc/lcd_stm32f0.c **** //====================================================================
 327:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: A delay used by the LCD functions.
 328:Core/Inc/lcd_stm32f0.c **** //====================================================================
 329:Core/Inc/lcd_stm32f0.c **** 
 330:Core/Inc/lcd_stm32f0.c **** void delay(unsigned int microseconds)
 331:Core/Inc/lcd_stm32f0.c **** {
  29              		.loc 2 331 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 2 331 1 is_stmt 0 view .LVU1
  35 0000 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 8
 332:Core/Inc/lcd_stm32f0.c **** 	  volatile unsigned int counter;
  37              		.loc 2 332 4 is_stmt 1 view .LVU2
 333:Core/Inc/lcd_stm32f0.c **** 	  microseconds *= 3;
  38              		.loc 2 333 4 view .LVU3
  39              		.loc 2 333 17 is_stmt 0 view .LVU4
  40 0002 4300     		lsls	r3, r0, #1
  41 0004 1818     		adds	r0, r3, r0
  42              	.LVL1:
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  43              		.loc 2 334 4 is_stmt 1 view .LVU5
  44              		.loc 2 334 16 is_stmt 0 view .LVU6
  45 0006 0023     		movs	r3, #0
  46 0008 0193     		str	r3, [sp, #4]
  47              		.loc 2 334 4 view .LVU7
  48 000a 04E0     		b	.L2
  49              	.L3:
 335:Core/Inc/lcd_stm32f0.c **** 	  {
 336:Core/Inc/lcd_stm32f0.c **** 	    __asm("nop");
  50              		.loc 2 336 6 is_stmt 1 view .LVU8
  51              		.syntax divided
  52              	@ 336 "Core/Inc/lcd_stm32f0.c" 1
  53 000c C046     		nop
  54              	@ 0 "" 2
 337:Core/Inc/lcd_stm32f0.c **** 	    __asm("nop");
  55              		.loc 2 337 6 view .LVU9
  56              	@ 337 "Core/Inc/lcd_stm32f0.c" 1
  57 000e C046     		nop
  58              	@ 0 "" 2
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  59              		.loc 2 334 50 discriminator 3 view .LVU10
  60              		.thumb
  61              		.syntax unified
  62 0010 019B     		ldr	r3, [sp, #4]
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 8


  63 0012 0133     		adds	r3, r3, #1
  64 0014 0193     		str	r3, [sp, #4]
  65              	.L2:
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  66              		.loc 2 334 28 discriminator 1 view .LVU11
  67 0016 019B     		ldr	r3, [sp, #4]
  68 0018 8342     		cmp	r3, r0
  69 001a F7D3     		bcc	.L3
 338:Core/Inc/lcd_stm32f0.c **** 	  }
 339:Core/Inc/lcd_stm32f0.c **** }
  70              		.loc 2 339 1 is_stmt 0 view .LVU12
  71 001c 02B0     		add	sp, sp, #8
  72              		@ sp needed
  73 001e 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE45:
  77              		.section	.text.pulse_strobe,"ax",%progbits
  78              		.align	1
  79              		.global	pulse_strobe
  80              		.syntax unified
  81              		.code	16
  82              		.thumb_func
  84              	pulse_strobe:
  85              	.LFB44:
 309:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
  86              		.loc 2 309 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 70B5     		push	{r4, r5, r6, lr}
  91              		.cfi_def_cfa_offset 16
  92              		.cfi_offset 4, -16
  93              		.cfi_offset 5, -12
  94              		.cfi_offset 6, -8
  95              		.cfi_offset 14, -4
 310:Core/Inc/lcd_stm32f0.c **** 
  96              		.loc 2 310 5 view .LVU14
  97 0002 1420     		movs	r0, #20
  98 0004 FFF7FEFF 		bl	delay
  99              	.LVL2:
 312:Core/Inc/lcd_stm32f0.c **** 
 100              		.loc 2 312 5 view .LVU15
 312:Core/Inc/lcd_stm32f0.c **** 
 101              		.loc 2 312 10 is_stmt 0 view .LVU16
 102 0008 0A4C     		ldr	r4, .L5
 103 000a A369     		ldr	r3, [r4, #24]
 312:Core/Inc/lcd_stm32f0.c **** 
 104              		.loc 2 312 17 view .LVU17
 105 000c 8025     		movs	r5, #128
 106 000e 2D02     		lsls	r5, r5, #8
 107 0010 2B43     		orrs	r3, r5
 108 0012 A361     		str	r3, [r4, #24]
 314:Core/Inc/lcd_stm32f0.c **** 
 109              		.loc 2 314 5 is_stmt 1 view .LVU18
 110 0014 1420     		movs	r0, #20
 111 0016 FFF7FEFF 		bl	delay
 112              	.LVL3:
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 9


 316:Core/Inc/lcd_stm32f0.c **** 
 113              		.loc 2 316 5 view .LVU19
 316:Core/Inc/lcd_stm32f0.c **** 
 114              		.loc 2 316 10 is_stmt 0 view .LVU20
 115 001a A269     		ldr	r2, [r4, #24]
 316:Core/Inc/lcd_stm32f0.c **** 
 116              		.loc 2 316 17 view .LVU21
 117 001c 8023     		movs	r3, #128
 118 001e 1B06     		lsls	r3, r3, #24
 119 0020 1343     		orrs	r3, r2
 120 0022 A361     		str	r3, [r4, #24]
 318:Core/Inc/lcd_stm32f0.c **** 
 121              		.loc 2 318 5 is_stmt 1 view .LVU22
 122 0024 1420     		movs	r0, #20
 123 0026 FFF7FEFF 		bl	delay
 124              	.LVL4:
 320:Core/Inc/lcd_stm32f0.c **** }
 125              		.loc 2 320 5 view .LVU23
 320:Core/Inc/lcd_stm32f0.c **** }
 126              		.loc 2 320 10 is_stmt 0 view .LVU24
 127 002a A369     		ldr	r3, [r4, #24]
 320:Core/Inc/lcd_stm32f0.c **** }
 128              		.loc 2 320 17 view .LVU25
 129 002c 1D43     		orrs	r5, r3
 130 002e A561     		str	r5, [r4, #24]
 321:Core/Inc/lcd_stm32f0.c **** 
 131              		.loc 2 321 1 view .LVU26
 132              		@ sp needed
 133 0030 70BD     		pop	{r4, r5, r6, pc}
 134              	.L6:
 135 0032 C046     		.align	2
 136              	.L5:
 137 0034 00080048 		.word	1207961600
 138              		.cfi_endproc
 139              	.LFE44:
 141              		.section	.text.lcd_putchar,"ax",%progbits
 142              		.align	1
 143              		.global	lcd_putchar
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 148              	lcd_putchar:
 149              	.LVL5:
 150              	.LFB42:
 199:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 151              		.loc 2 199 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 199:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 155              		.loc 2 199 1 is_stmt 0 view .LVU28
 156 0000 10B5     		push	{r4, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 160 0002 0400     		movs	r4, r0
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 10


 161              		.loc 2 200 2 is_stmt 1 view .LVU29
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 162              		.loc 2 200 7 is_stmt 0 view .LVU30
 163 0004 454A     		ldr	r2, .L25
 164 0006 9169     		ldr	r1, [r2, #24]
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 165              		.loc 2 200 14 view .LVU31
 166 0008 8023     		movs	r3, #128
 167 000a DB01     		lsls	r3, r3, #7
 168 000c 0B43     		orrs	r3, r1
 169 000e 9361     		str	r3, [r2, #24]
 203:Core/Inc/lcd_stm32f0.c ****         {
 170              		.loc 2 203 9 is_stmt 1 view .LVU32
 203:Core/Inc/lcd_stm32f0.c ****         {
 171              		.loc 2 203 32 is_stmt 0 view .LVU33
 172 0010 43B2     		sxtb	r3, r0
 203:Core/Inc/lcd_stm32f0.c ****         {
 173              		.loc 2 203 12 view .LVU34
 174 0012 002B     		cmp	r3, #0
 175 0014 46DB     		blt	.L24
 209:Core/Inc/lcd_stm32f0.c ****         }
 176              		.loc 2 209 10 is_stmt 1 view .LVU35
 209:Core/Inc/lcd_stm32f0.c ****         }
 177              		.loc 2 209 15 is_stmt 0 view .LVU36
 178 0016 9022     		movs	r2, #144
 179 0018 D205     		lsls	r2, r2, #23
 180 001a 9169     		ldr	r1, [r2, #24]
 209:Core/Inc/lcd_stm32f0.c ****         }
 181              		.loc 2 209 22 view .LVU37
 182 001c 8023     		movs	r3, #128
 183 001e 1B06     		lsls	r3, r3, #24
 184 0020 0B43     		orrs	r3, r1
 185 0022 9361     		str	r3, [r2, #24]
 186              	.L9:
 212:Core/Inc/lcd_stm32f0.c **** 	{
 187              		.loc 2 212 9 is_stmt 1 view .LVU38
 212:Core/Inc/lcd_stm32f0.c **** 	{
 188              		.loc 2 212 12 is_stmt 0 view .LVU39
 189 0024 6306     		lsls	r3, r4, #25
 190 0026 45D5     		bpl	.L10
 214:Core/Inc/lcd_stm32f0.c ****         }
 191              		.loc 2 214 13 is_stmt 1 view .LVU40
 214:Core/Inc/lcd_stm32f0.c ****         }
 192              		.loc 2 214 18 is_stmt 0 view .LVU41
 193 0028 9022     		movs	r2, #144
 194 002a D205     		lsls	r2, r2, #23
 195 002c 9169     		ldr	r1, [r2, #24]
 214:Core/Inc/lcd_stm32f0.c ****         }
 196              		.loc 2 214 25 view .LVU42
 197 002e 8023     		movs	r3, #128
 198 0030 5B01     		lsls	r3, r3, #5
 199 0032 0B43     		orrs	r3, r1
 200 0034 9361     		str	r3, [r2, #24]
 201              	.L11:
 222:Core/Inc/lcd_stm32f0.c **** 
 202              		.loc 2 222 9 is_stmt 1 view .LVU43
 222:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 11


 203              		.loc 2 222 12 is_stmt 0 view .LVU44
 204 0036 A306     		lsls	r3, r4, #26
 205 0038 44D5     		bpl	.L12
 225:Core/Inc/lcd_stm32f0.c **** 	}
 206              		.loc 2 225 10 is_stmt 1 view .LVU45
 225:Core/Inc/lcd_stm32f0.c **** 	}
 207              		.loc 2 225 15 is_stmt 0 view .LVU46
 208 003a 394A     		ldr	r2, .L25+4
 209 003c 9169     		ldr	r1, [r2, #24]
 225:Core/Inc/lcd_stm32f0.c **** 	}
 210              		.loc 2 225 22 view .LVU47
 211 003e 8023     		movs	r3, #128
 212 0040 9B00     		lsls	r3, r3, #2
 213 0042 0B43     		orrs	r3, r1
 214 0044 9361     		str	r3, [r2, #24]
 215              	.L13:
 232:Core/Inc/lcd_stm32f0.c ****         {
 216              		.loc 2 232 9 is_stmt 1 view .LVU48
 232:Core/Inc/lcd_stm32f0.c ****         {
 217              		.loc 2 232 12 is_stmt 0 view .LVU49
 218 0046 E306     		lsls	r3, r4, #27
 219 0048 43D5     		bpl	.L14
 234:Core/Inc/lcd_stm32f0.c ****         }
 220              		.loc 2 234 10 is_stmt 1 view .LVU50
 234:Core/Inc/lcd_stm32f0.c ****         }
 221              		.loc 2 234 15 is_stmt 0 view .LVU51
 222 004a 354A     		ldr	r2, .L25+4
 223 004c 9169     		ldr	r1, [r2, #24]
 234:Core/Inc/lcd_stm32f0.c ****         }
 224              		.loc 2 234 22 view .LVU52
 225 004e 8023     		movs	r3, #128
 226 0050 5B00     		lsls	r3, r3, #1
 227 0052 0B43     		orrs	r3, r1
 228 0054 9361     		str	r3, [r2, #24]
 229              	.L15:
 241:Core/Inc/lcd_stm32f0.c **** 
 230              		.loc 2 241 9 is_stmt 1 view .LVU53
 231 0056 FFF7FEFF 		bl	pulse_strobe
 232              	.LVL6:
 244:Core/Inc/lcd_stm32f0.c ****         {
 233              		.loc 2 244 9 view .LVU54
 244:Core/Inc/lcd_stm32f0.c ****         {
 234              		.loc 2 244 12 is_stmt 0 view .LVU55
 235 005a 2307     		lsls	r3, r4, #28
 236 005c 40D5     		bpl	.L16
 246:Core/Inc/lcd_stm32f0.c ****         }
 237              		.loc 2 246 10 is_stmt 1 view .LVU56
 246:Core/Inc/lcd_stm32f0.c ****         }
 238              		.loc 2 246 15 is_stmt 0 view .LVU57
 239 005e 9022     		movs	r2, #144
 240 0060 D205     		lsls	r2, r2, #23
 241 0062 9169     		ldr	r1, [r2, #24]
 246:Core/Inc/lcd_stm32f0.c ****         }
 242              		.loc 2 246 22 view .LVU58
 243 0064 8023     		movs	r3, #128
 244 0066 1B02     		lsls	r3, r3, #8
 245 0068 0B43     		orrs	r3, r1
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 12


 246 006a 9361     		str	r3, [r2, #24]
 247              	.L17:
 253:Core/Inc/lcd_stm32f0.c **** 	{
 248              		.loc 2 253 9 is_stmt 1 view .LVU59
 253:Core/Inc/lcd_stm32f0.c **** 	{
 249              		.loc 2 253 12 is_stmt 0 view .LVU60
 250 006c 6307     		lsls	r3, r4, #29
 251 006e 3FD5     		bpl	.L18
 255:Core/Inc/lcd_stm32f0.c ****         }
 252              		.loc 2 255 13 is_stmt 1 view .LVU61
 255:Core/Inc/lcd_stm32f0.c ****         }
 253              		.loc 2 255 18 is_stmt 0 view .LVU62
 254 0070 9022     		movs	r2, #144
 255 0072 D205     		lsls	r2, r2, #23
 256 0074 9169     		ldr	r1, [r2, #24]
 255:Core/Inc/lcd_stm32f0.c ****         }
 257              		.loc 2 255 25 view .LVU63
 258 0076 8023     		movs	r3, #128
 259 0078 5B01     		lsls	r3, r3, #5
 260 007a 0B43     		orrs	r3, r1
 261 007c 9361     		str	r3, [r2, #24]
 262              	.L19:
 263:Core/Inc/lcd_stm32f0.c ****         {
 263              		.loc 2 263 9 is_stmt 1 view .LVU64
 263:Core/Inc/lcd_stm32f0.c ****         {
 264              		.loc 2 263 12 is_stmt 0 view .LVU65
 265 007e A307     		lsls	r3, r4, #30
 266 0080 3ED5     		bpl	.L20
 265:Core/Inc/lcd_stm32f0.c **** 	}
 267              		.loc 2 265 10 is_stmt 1 view .LVU66
 265:Core/Inc/lcd_stm32f0.c **** 	}
 268              		.loc 2 265 15 is_stmt 0 view .LVU67
 269 0082 274A     		ldr	r2, .L25+4
 270 0084 9169     		ldr	r1, [r2, #24]
 265:Core/Inc/lcd_stm32f0.c **** 	}
 271              		.loc 2 265 22 view .LVU68
 272 0086 8023     		movs	r3, #128
 273 0088 9B00     		lsls	r3, r3, #2
 274 008a 0B43     		orrs	r3, r1
 275 008c 9361     		str	r3, [r2, #24]
 276              	.L21:
 272:Core/Inc/lcd_stm32f0.c ****         {
 277              		.loc 2 272 9 is_stmt 1 view .LVU69
 272:Core/Inc/lcd_stm32f0.c ****         {
 278              		.loc 2 272 12 is_stmt 0 view .LVU70
 279 008e E407     		lsls	r4, r4, #31
 280 0090 3DD5     		bpl	.L22
 281              	.LVL7:
 274:Core/Inc/lcd_stm32f0.c ****         }
 282              		.loc 2 274 10 is_stmt 1 view .LVU71
 274:Core/Inc/lcd_stm32f0.c ****         }
 283              		.loc 2 274 15 is_stmt 0 view .LVU72
 284 0092 234A     		ldr	r2, .L25+4
 285 0094 9169     		ldr	r1, [r2, #24]
 274:Core/Inc/lcd_stm32f0.c ****         }
 286              		.loc 2 274 22 view .LVU73
 287 0096 8023     		movs	r3, #128
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 13


 288 0098 5B00     		lsls	r3, r3, #1
 289 009a 0B43     		orrs	r3, r1
 290 009c 9361     		str	r3, [r2, #24]
 291              	.L23:
 281:Core/Inc/lcd_stm32f0.c **** }
 292              		.loc 2 281 9 is_stmt 1 view .LVU74
 293 009e FFF7FEFF 		bl	pulse_strobe
 294              	.LVL8:
 282:Core/Inc/lcd_stm32f0.c **** 
 295              		.loc 2 282 1 is_stmt 0 view .LVU75
 296              		@ sp needed
 297 00a2 10BD     		pop	{r4, pc}
 298              	.LVL9:
 299              	.L24:
 205:Core/Inc/lcd_stm32f0.c ****         }
 300              		.loc 2 205 10 is_stmt 1 view .LVU76
 205:Core/Inc/lcd_stm32f0.c ****         }
 301              		.loc 2 205 15 is_stmt 0 view .LVU77
 302 00a4 9022     		movs	r2, #144
 303 00a6 D205     		lsls	r2, r2, #23
 304 00a8 9169     		ldr	r1, [r2, #24]
 205:Core/Inc/lcd_stm32f0.c ****         }
 305              		.loc 2 205 22 view .LVU78
 306 00aa 8023     		movs	r3, #128
 307 00ac 1B02     		lsls	r3, r3, #8
 308 00ae 0B43     		orrs	r3, r1
 309 00b0 9361     		str	r3, [r2, #24]
 310 00b2 B7E7     		b	.L9
 311              	.L10:
 219:Core/Inc/lcd_stm32f0.c ****         }
 312              		.loc 2 219 13 is_stmt 1 view .LVU79
 219:Core/Inc/lcd_stm32f0.c ****         }
 313              		.loc 2 219 18 is_stmt 0 view .LVU80
 314 00b4 9022     		movs	r2, #144
 315 00b6 D205     		lsls	r2, r2, #23
 316 00b8 9169     		ldr	r1, [r2, #24]
 219:Core/Inc/lcd_stm32f0.c ****         }
 317              		.loc 2 219 25 view .LVU81
 318 00ba 8023     		movs	r3, #128
 319 00bc 5B05     		lsls	r3, r3, #21
 320 00be 0B43     		orrs	r3, r1
 321 00c0 9361     		str	r3, [r2, #24]
 322 00c2 B8E7     		b	.L11
 323              	.L12:
 229:Core/Inc/lcd_stm32f0.c ****         }
 324              		.loc 2 229 10 is_stmt 1 view .LVU82
 229:Core/Inc/lcd_stm32f0.c ****         }
 325              		.loc 2 229 15 is_stmt 0 view .LVU83
 326 00c4 164A     		ldr	r2, .L25+4
 327 00c6 9169     		ldr	r1, [r2, #24]
 229:Core/Inc/lcd_stm32f0.c ****         }
 328              		.loc 2 229 22 view .LVU84
 329 00c8 8023     		movs	r3, #128
 330 00ca 9B04     		lsls	r3, r3, #18
 331 00cc 0B43     		orrs	r3, r1
 332 00ce 9361     		str	r3, [r2, #24]
 333 00d0 B9E7     		b	.L13
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 14


 334              	.L14:
 238:Core/Inc/lcd_stm32f0.c ****         }
 335              		.loc 2 238 10 is_stmt 1 view .LVU85
 238:Core/Inc/lcd_stm32f0.c ****         }
 336              		.loc 2 238 15 is_stmt 0 view .LVU86
 337 00d2 134A     		ldr	r2, .L25+4
 338 00d4 9169     		ldr	r1, [r2, #24]
 238:Core/Inc/lcd_stm32f0.c ****         }
 339              		.loc 2 238 22 view .LVU87
 340 00d6 8023     		movs	r3, #128
 341 00d8 5B04     		lsls	r3, r3, #17
 342 00da 0B43     		orrs	r3, r1
 343 00dc 9361     		str	r3, [r2, #24]
 344 00de BAE7     		b	.L15
 345              	.LVL10:
 346              	.L16:
 250:Core/Inc/lcd_stm32f0.c ****         }
 347              		.loc 2 250 10 is_stmt 1 view .LVU88
 250:Core/Inc/lcd_stm32f0.c ****         }
 348              		.loc 2 250 15 is_stmt 0 view .LVU89
 349 00e0 9022     		movs	r2, #144
 350 00e2 D205     		lsls	r2, r2, #23
 351 00e4 9169     		ldr	r1, [r2, #24]
 250:Core/Inc/lcd_stm32f0.c ****         }
 352              		.loc 2 250 22 view .LVU90
 353 00e6 8023     		movs	r3, #128
 354 00e8 1B06     		lsls	r3, r3, #24
 355 00ea 0B43     		orrs	r3, r1
 356 00ec 9361     		str	r3, [r2, #24]
 357 00ee BDE7     		b	.L17
 358              	.L18:
 260:Core/Inc/lcd_stm32f0.c ****         }
 359              		.loc 2 260 13 is_stmt 1 view .LVU91
 260:Core/Inc/lcd_stm32f0.c ****         }
 360              		.loc 2 260 18 is_stmt 0 view .LVU92
 361 00f0 9022     		movs	r2, #144
 362 00f2 D205     		lsls	r2, r2, #23
 363 00f4 9169     		ldr	r1, [r2, #24]
 260:Core/Inc/lcd_stm32f0.c ****         }
 364              		.loc 2 260 25 view .LVU93
 365 00f6 8023     		movs	r3, #128
 366 00f8 5B05     		lsls	r3, r3, #21
 367 00fa 0B43     		orrs	r3, r1
 368 00fc 9361     		str	r3, [r2, #24]
 369 00fe BEE7     		b	.L19
 370              	.L20:
 269:Core/Inc/lcd_stm32f0.c ****         }
 371              		.loc 2 269 10 is_stmt 1 view .LVU94
 269:Core/Inc/lcd_stm32f0.c ****         }
 372              		.loc 2 269 15 is_stmt 0 view .LVU95
 373 0100 074A     		ldr	r2, .L25+4
 374 0102 9169     		ldr	r1, [r2, #24]
 269:Core/Inc/lcd_stm32f0.c ****         }
 375              		.loc 2 269 22 view .LVU96
 376 0104 8023     		movs	r3, #128
 377 0106 9B04     		lsls	r3, r3, #18
 378 0108 0B43     		orrs	r3, r1
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 15


 379 010a 9361     		str	r3, [r2, #24]
 380 010c BFE7     		b	.L21
 381              	.LVL11:
 382              	.L22:
 278:Core/Inc/lcd_stm32f0.c ****         }
 383              		.loc 2 278 10 is_stmt 1 view .LVU97
 278:Core/Inc/lcd_stm32f0.c ****         }
 384              		.loc 2 278 15 is_stmt 0 view .LVU98
 385 010e 044A     		ldr	r2, .L25+4
 386 0110 9169     		ldr	r1, [r2, #24]
 278:Core/Inc/lcd_stm32f0.c ****         }
 387              		.loc 2 278 22 view .LVU99
 388 0112 8023     		movs	r3, #128
 389 0114 5B04     		lsls	r3, r3, #17
 390 0116 0B43     		orrs	r3, r1
 391 0118 9361     		str	r3, [r2, #24]
 392 011a C0E7     		b	.L23
 393              	.L26:
 394              		.align	2
 395              	.L25:
 396 011c 00080048 		.word	1207961600
 397 0120 00040048 		.word	1207960576
 398              		.cfi_endproc
 399              	.LFE42:
 401              		.section	.text.lcd_putstring,"ax",%progbits
 402              		.align	1
 403              		.global	lcd_putstring
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	lcd_putstring:
 409              	.LVL12:
 410              	.LFB43:
 291:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 411              		.loc 2 291 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 291:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 415              		.loc 2 291 1 is_stmt 0 view .LVU101
 416 0000 70B5     		push	{r4, r5, r6, lr}
 417              		.cfi_def_cfa_offset 16
 418              		.cfi_offset 4, -16
 419              		.cfi_offset 5, -12
 420              		.cfi_offset 6, -8
 421              		.cfi_offset 14, -4
 422 0002 0500     		movs	r5, r0
 292:Core/Inc/lcd_stm32f0.c **** 
 423              		.loc 2 292 5 is_stmt 1 view .LVU102
 424              	.LVL13:
 294:Core/Inc/lcd_stm32f0.c ****     {
 425              		.loc 2 294 5 view .LVU103
 292:Core/Inc/lcd_stm32f0.c **** 
 426              		.loc 2 292 19 is_stmt 0 view .LVU104
 427 0004 0024     		movs	r4, #0
 294:Core/Inc/lcd_stm32f0.c ****     {
 428              		.loc 2 294 11 view .LVU105
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 16


 429 0006 03E0     		b	.L28
 430              	.LVL14:
 431              	.L29:
 296:Core/Inc/lcd_stm32f0.c **** 	    count++;
 432              		.loc 2 296 6 is_stmt 1 view .LVU106
 433 0008 FFF7FEFF 		bl	lcd_putchar
 434              	.LVL15:
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 435              		.loc 2 297 6 view .LVU107
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 436              		.loc 2 297 11 is_stmt 0 view .LVU108
 437 000c 0134     		adds	r4, r4, #1
 438              	.LVL16:
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 439              		.loc 2 297 11 view .LVU109
 440 000e E4B2     		uxtb	r4, r4
 441              	.LVL17:
 442              	.L28:
 294:Core/Inc/lcd_stm32f0.c ****     {
 443              		.loc 2 294 12 is_stmt 1 view .LVU110
 294:Core/Inc/lcd_stm32f0.c ****     {
 444              		.loc 2 294 20 is_stmt 0 view .LVU111
 445 0010 285D     		ldrb	r0, [r5, r4]
 294:Core/Inc/lcd_stm32f0.c ****     {
 446              		.loc 2 294 12 view .LVU112
 447 0012 0028     		cmp	r0, #0
 448 0014 F8D1     		bne	.L29
 299:Core/Inc/lcd_stm32f0.c **** 
 449              		.loc 2 299 1 view .LVU113
 450              		@ sp needed
 451              	.LVL18:
 452              	.LVL19:
 299:Core/Inc/lcd_stm32f0.c **** 
 453              		.loc 2 299 1 view .LVU114
 454 0016 70BD     		pop	{r4, r5, r6, pc}
 455              		.cfi_endproc
 456              	.LFE43:
 458              		.section	.text.lcd_command,"ax",%progbits
 459              		.align	1
 460              		.global	lcd_command
 461              		.syntax unified
 462              		.code	16
 463              		.thumb_func
 465              	lcd_command:
 466              	.LVL20:
 467              	.LFB40:
  72:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 468              		.loc 2 72 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 472              		.loc 2 72 1 is_stmt 0 view .LVU116
 473 0000 10B5     		push	{r4, lr}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 4, -8
 476              		.cfi_offset 14, -4
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 17


 477 0002 0400     		movs	r4, r0
  73:Core/Inc/lcd_stm32f0.c **** 
 478              		.loc 2 73 5 is_stmt 1 view .LVU117
  73:Core/Inc/lcd_stm32f0.c **** 
 479              		.loc 2 73 10 is_stmt 0 view .LVU118
 480 0004 474A     		ldr	r2, .L48
 481 0006 9169     		ldr	r1, [r2, #24]
  73:Core/Inc/lcd_stm32f0.c **** 
 482              		.loc 2 73 17 view .LVU119
 483 0008 8023     		movs	r3, #128
 484 000a DB05     		lsls	r3, r3, #23
 485 000c 0B43     		orrs	r3, r1
 486 000e 9361     		str	r3, [r2, #24]
  77:Core/Inc/lcd_stm32f0.c ****     {
 487              		.loc 2 77 5 is_stmt 1 view .LVU120
  77:Core/Inc/lcd_stm32f0.c ****     {
 488              		.loc 2 77 26 is_stmt 0 view .LVU121
 489 0010 43B2     		sxtb	r3, r0
  77:Core/Inc/lcd_stm32f0.c ****     {
 490              		.loc 2 77 8 view .LVU122
 491 0012 002B     		cmp	r3, #0
 492 0014 49DB     		blt	.L47
  83:Core/Inc/lcd_stm32f0.c ****     }
 493              		.loc 2 83 6 is_stmt 1 view .LVU123
  83:Core/Inc/lcd_stm32f0.c ****     }
 494              		.loc 2 83 11 is_stmt 0 view .LVU124
 495 0016 9022     		movs	r2, #144
 496 0018 D205     		lsls	r2, r2, #23
 497 001a 9169     		ldr	r1, [r2, #24]
  83:Core/Inc/lcd_stm32f0.c ****     }
 498              		.loc 2 83 18 view .LVU125
 499 001c 8023     		movs	r3, #128
 500 001e 1B06     		lsls	r3, r3, #24
 501 0020 0B43     		orrs	r3, r1
 502 0022 9361     		str	r3, [r2, #24]
 503              	.L32:
  86:Core/Inc/lcd_stm32f0.c ****     {
 504              		.loc 2 86 5 is_stmt 1 view .LVU126
  86:Core/Inc/lcd_stm32f0.c ****     {
 505              		.loc 2 86 8 is_stmt 0 view .LVU127
 506 0024 6306     		lsls	r3, r4, #25
 507 0026 48D5     		bpl	.L33
  88:Core/Inc/lcd_stm32f0.c ****     }
 508              		.loc 2 88 9 is_stmt 1 view .LVU128
  88:Core/Inc/lcd_stm32f0.c ****     }
 509              		.loc 2 88 14 is_stmt 0 view .LVU129
 510 0028 9022     		movs	r2, #144
 511 002a D205     		lsls	r2, r2, #23
 512 002c 9169     		ldr	r1, [r2, #24]
  88:Core/Inc/lcd_stm32f0.c ****     }
 513              		.loc 2 88 21 view .LVU130
 514 002e 8023     		movs	r3, #128
 515 0030 5B01     		lsls	r3, r3, #5
 516 0032 0B43     		orrs	r3, r1
 517 0034 9361     		str	r3, [r2, #24]
 518              	.L34:
  95:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 18


 519              		.loc 2 95 5 is_stmt 1 view .LVU131
  95:Core/Inc/lcd_stm32f0.c ****     {
 520              		.loc 2 95 8 is_stmt 0 view .LVU132
 521 0036 A306     		lsls	r3, r4, #26
 522 0038 47D5     		bpl	.L35
  97:Core/Inc/lcd_stm32f0.c ****     }
 523              		.loc 2 97 6 is_stmt 1 view .LVU133
  97:Core/Inc/lcd_stm32f0.c ****     }
 524              		.loc 2 97 11 is_stmt 0 view .LVU134
 525 003a 3B4A     		ldr	r2, .L48+4
 526 003c 9169     		ldr	r1, [r2, #24]
  97:Core/Inc/lcd_stm32f0.c ****     }
 527              		.loc 2 97 18 view .LVU135
 528 003e 8023     		movs	r3, #128
 529 0040 9B00     		lsls	r3, r3, #2
 530 0042 0B43     		orrs	r3, r1
 531 0044 9361     		str	r3, [r2, #24]
 532              	.L36:
 104:Core/Inc/lcd_stm32f0.c ****     {
 533              		.loc 2 104 5 is_stmt 1 view .LVU136
 104:Core/Inc/lcd_stm32f0.c ****     {
 534              		.loc 2 104 8 is_stmt 0 view .LVU137
 535 0046 E306     		lsls	r3, r4, #27
 536 0048 46D5     		bpl	.L37
 106:Core/Inc/lcd_stm32f0.c ****     }
 537              		.loc 2 106 6 is_stmt 1 view .LVU138
 106:Core/Inc/lcd_stm32f0.c ****     }
 538              		.loc 2 106 11 is_stmt 0 view .LVU139
 539 004a 374A     		ldr	r2, .L48+4
 540 004c 9169     		ldr	r1, [r2, #24]
 106:Core/Inc/lcd_stm32f0.c ****     }
 541              		.loc 2 106 18 view .LVU140
 542 004e 8023     		movs	r3, #128
 543 0050 5B00     		lsls	r3, r3, #1
 544 0052 0B43     		orrs	r3, r1
 545 0054 9361     		str	r3, [r2, #24]
 546              	.L38:
 113:Core/Inc/lcd_stm32f0.c **** 
 547              		.loc 2 113 5 is_stmt 1 view .LVU141
 548 0056 FFF7FEFF 		bl	pulse_strobe
 549              	.LVL21:
 116:Core/Inc/lcd_stm32f0.c ****     {
 550              		.loc 2 116 5 view .LVU142
 116:Core/Inc/lcd_stm32f0.c ****     {
 551              		.loc 2 116 8 is_stmt 0 view .LVU143
 552 005a 2307     		lsls	r3, r4, #28
 553 005c 43D5     		bpl	.L39
 118:Core/Inc/lcd_stm32f0.c ****     }
 554              		.loc 2 118 6 is_stmt 1 view .LVU144
 118:Core/Inc/lcd_stm32f0.c ****     }
 555              		.loc 2 118 11 is_stmt 0 view .LVU145
 556 005e 9022     		movs	r2, #144
 557 0060 D205     		lsls	r2, r2, #23
 558 0062 9169     		ldr	r1, [r2, #24]
 118:Core/Inc/lcd_stm32f0.c ****     }
 559              		.loc 2 118 18 view .LVU146
 560 0064 8023     		movs	r3, #128
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 19


 561 0066 1B02     		lsls	r3, r3, #8
 562 0068 0B43     		orrs	r3, r1
 563 006a 9361     		str	r3, [r2, #24]
 564              	.L40:
 125:Core/Inc/lcd_stm32f0.c ****     {
 565              		.loc 2 125 5 is_stmt 1 view .LVU147
 125:Core/Inc/lcd_stm32f0.c ****     {
 566              		.loc 2 125 8 is_stmt 0 view .LVU148
 567 006c 6307     		lsls	r3, r4, #29
 568 006e 42D5     		bpl	.L41
 127:Core/Inc/lcd_stm32f0.c ****     }
 569              		.loc 2 127 9 is_stmt 1 view .LVU149
 127:Core/Inc/lcd_stm32f0.c ****     }
 570              		.loc 2 127 14 is_stmt 0 view .LVU150
 571 0070 9022     		movs	r2, #144
 572 0072 D205     		lsls	r2, r2, #23
 573 0074 9169     		ldr	r1, [r2, #24]
 127:Core/Inc/lcd_stm32f0.c ****     }
 574              		.loc 2 127 21 view .LVU151
 575 0076 8023     		movs	r3, #128
 576 0078 5B01     		lsls	r3, r3, #5
 577 007a 0B43     		orrs	r3, r1
 578 007c 9361     		str	r3, [r2, #24]
 579              	.L42:
 134:Core/Inc/lcd_stm32f0.c ****     {
 580              		.loc 2 134 5 is_stmt 1 view .LVU152
 134:Core/Inc/lcd_stm32f0.c ****     {
 581              		.loc 2 134 8 is_stmt 0 view .LVU153
 582 007e A307     		lsls	r3, r4, #30
 583 0080 41D5     		bpl	.L43
 136:Core/Inc/lcd_stm32f0.c ****     }
 584              		.loc 2 136 6 is_stmt 1 view .LVU154
 136:Core/Inc/lcd_stm32f0.c ****     }
 585              		.loc 2 136 11 is_stmt 0 view .LVU155
 586 0082 294A     		ldr	r2, .L48+4
 587 0084 9169     		ldr	r1, [r2, #24]
 136:Core/Inc/lcd_stm32f0.c ****     }
 588              		.loc 2 136 18 view .LVU156
 589 0086 8023     		movs	r3, #128
 590 0088 9B00     		lsls	r3, r3, #2
 591 008a 0B43     		orrs	r3, r1
 592 008c 9361     		str	r3, [r2, #24]
 593              	.L44:
 143:Core/Inc/lcd_stm32f0.c ****     {
 594              		.loc 2 143 5 is_stmt 1 view .LVU157
 143:Core/Inc/lcd_stm32f0.c ****     {
 595              		.loc 2 143 8 is_stmt 0 view .LVU158
 596 008e E407     		lsls	r4, r4, #31
 597 0090 40D5     		bpl	.L45
 598              	.LVL22:
 145:Core/Inc/lcd_stm32f0.c ****     }
 599              		.loc 2 145 6 is_stmt 1 view .LVU159
 145:Core/Inc/lcd_stm32f0.c ****     }
 600              		.loc 2 145 11 is_stmt 0 view .LVU160
 601 0092 254A     		ldr	r2, .L48+4
 602 0094 9169     		ldr	r1, [r2, #24]
 145:Core/Inc/lcd_stm32f0.c ****     }
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 20


 603              		.loc 2 145 18 view .LVU161
 604 0096 8023     		movs	r3, #128
 605 0098 5B00     		lsls	r3, r3, #1
 606 009a 0B43     		orrs	r3, r1
 607 009c 9361     		str	r3, [r2, #24]
 608              	.L46:
 152:Core/Inc/lcd_stm32f0.c ****     delay(3000);
 609              		.loc 2 152 5 is_stmt 1 view .LVU162
 610 009e FFF7FEFF 		bl	pulse_strobe
 611              	.LVL23:
 153:Core/Inc/lcd_stm32f0.c **** }
 612              		.loc 2 153 5 view .LVU163
 613 00a2 2248     		ldr	r0, .L48+8
 614 00a4 FFF7FEFF 		bl	delay
 615              	.LVL24:
 154:Core/Inc/lcd_stm32f0.c **** 
 616              		.loc 2 154 1 is_stmt 0 view .LVU164
 617              		@ sp needed
 618 00a8 10BD     		pop	{r4, pc}
 619              	.LVL25:
 620              	.L47:
  79:Core/Inc/lcd_stm32f0.c ****     }
 621              		.loc 2 79 6 is_stmt 1 view .LVU165
  79:Core/Inc/lcd_stm32f0.c ****     }
 622              		.loc 2 79 11 is_stmt 0 view .LVU166
 623 00aa 9022     		movs	r2, #144
 624 00ac D205     		lsls	r2, r2, #23
 625 00ae 9169     		ldr	r1, [r2, #24]
  79:Core/Inc/lcd_stm32f0.c ****     }
 626              		.loc 2 79 18 view .LVU167
 627 00b0 8023     		movs	r3, #128
 628 00b2 1B02     		lsls	r3, r3, #8
 629 00b4 0B43     		orrs	r3, r1
 630 00b6 9361     		str	r3, [r2, #24]
 631 00b8 B4E7     		b	.L32
 632              	.L33:
  92:Core/Inc/lcd_stm32f0.c ****     }
 633              		.loc 2 92 9 is_stmt 1 view .LVU168
  92:Core/Inc/lcd_stm32f0.c ****     }
 634              		.loc 2 92 14 is_stmt 0 view .LVU169
 635 00ba 9022     		movs	r2, #144
 636 00bc D205     		lsls	r2, r2, #23
 637 00be 9169     		ldr	r1, [r2, #24]
  92:Core/Inc/lcd_stm32f0.c ****     }
 638              		.loc 2 92 21 view .LVU170
 639 00c0 8023     		movs	r3, #128
 640 00c2 5B05     		lsls	r3, r3, #21
 641 00c4 0B43     		orrs	r3, r1
 642 00c6 9361     		str	r3, [r2, #24]
 643 00c8 B5E7     		b	.L34
 644              	.L35:
 101:Core/Inc/lcd_stm32f0.c ****     }
 645              		.loc 2 101 6 is_stmt 1 view .LVU171
 101:Core/Inc/lcd_stm32f0.c ****     }
 646              		.loc 2 101 11 is_stmt 0 view .LVU172
 647 00ca 174A     		ldr	r2, .L48+4
 648 00cc 9169     		ldr	r1, [r2, #24]
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 21


 101:Core/Inc/lcd_stm32f0.c ****     }
 649              		.loc 2 101 18 view .LVU173
 650 00ce 8023     		movs	r3, #128
 651 00d0 9B04     		lsls	r3, r3, #18
 652 00d2 0B43     		orrs	r3, r1
 653 00d4 9361     		str	r3, [r2, #24]
 654 00d6 B6E7     		b	.L36
 655              	.L37:
 110:Core/Inc/lcd_stm32f0.c ****     }
 656              		.loc 2 110 6 is_stmt 1 view .LVU174
 110:Core/Inc/lcd_stm32f0.c ****     }
 657              		.loc 2 110 11 is_stmt 0 view .LVU175
 658 00d8 134A     		ldr	r2, .L48+4
 659 00da 9169     		ldr	r1, [r2, #24]
 110:Core/Inc/lcd_stm32f0.c ****     }
 660              		.loc 2 110 18 view .LVU176
 661 00dc 8023     		movs	r3, #128
 662 00de 5B04     		lsls	r3, r3, #17
 663 00e0 0B43     		orrs	r3, r1
 664 00e2 9361     		str	r3, [r2, #24]
 665 00e4 B7E7     		b	.L38
 666              	.LVL26:
 667              	.L39:
 122:Core/Inc/lcd_stm32f0.c ****     }
 668              		.loc 2 122 6 is_stmt 1 view .LVU177
 122:Core/Inc/lcd_stm32f0.c ****     }
 669              		.loc 2 122 11 is_stmt 0 view .LVU178
 670 00e6 9022     		movs	r2, #144
 671 00e8 D205     		lsls	r2, r2, #23
 672 00ea 9169     		ldr	r1, [r2, #24]
 122:Core/Inc/lcd_stm32f0.c ****     }
 673              		.loc 2 122 18 view .LVU179
 674 00ec 8023     		movs	r3, #128
 675 00ee 1B06     		lsls	r3, r3, #24
 676 00f0 0B43     		orrs	r3, r1
 677 00f2 9361     		str	r3, [r2, #24]
 678 00f4 BAE7     		b	.L40
 679              	.L41:
 131:Core/Inc/lcd_stm32f0.c ****     }
 680              		.loc 2 131 9 is_stmt 1 view .LVU180
 131:Core/Inc/lcd_stm32f0.c ****     }
 681              		.loc 2 131 14 is_stmt 0 view .LVU181
 682 00f6 9022     		movs	r2, #144
 683 00f8 D205     		lsls	r2, r2, #23
 684 00fa 9169     		ldr	r1, [r2, #24]
 131:Core/Inc/lcd_stm32f0.c ****     }
 685              		.loc 2 131 21 view .LVU182
 686 00fc 8023     		movs	r3, #128
 687 00fe 5B05     		lsls	r3, r3, #21
 688 0100 0B43     		orrs	r3, r1
 689 0102 9361     		str	r3, [r2, #24]
 690 0104 BBE7     		b	.L42
 691              	.L43:
 140:Core/Inc/lcd_stm32f0.c ****     }
 692              		.loc 2 140 6 is_stmt 1 view .LVU183
 140:Core/Inc/lcd_stm32f0.c ****     }
 693              		.loc 2 140 11 is_stmt 0 view .LVU184
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 22


 694 0106 084A     		ldr	r2, .L48+4
 695 0108 9169     		ldr	r1, [r2, #24]
 140:Core/Inc/lcd_stm32f0.c ****     }
 696              		.loc 2 140 18 view .LVU185
 697 010a 8023     		movs	r3, #128
 698 010c 9B04     		lsls	r3, r3, #18
 699 010e 0B43     		orrs	r3, r1
 700 0110 9361     		str	r3, [r2, #24]
 701 0112 BCE7     		b	.L44
 702              	.LVL27:
 703              	.L45:
 149:Core/Inc/lcd_stm32f0.c ****     }
 704              		.loc 2 149 6 is_stmt 1 view .LVU186
 149:Core/Inc/lcd_stm32f0.c ****     }
 705              		.loc 2 149 11 is_stmt 0 view .LVU187
 706 0114 044A     		ldr	r2, .L48+4
 707 0116 9169     		ldr	r1, [r2, #24]
 149:Core/Inc/lcd_stm32f0.c ****     }
 708              		.loc 2 149 18 view .LVU188
 709 0118 8023     		movs	r3, #128
 710 011a 5B04     		lsls	r3, r3, #17
 711 011c 0B43     		orrs	r3, r1
 712 011e 9361     		str	r3, [r2, #24]
 713 0120 BDE7     		b	.L46
 714              	.L49:
 715 0122 C046     		.align	2
 716              	.L48:
 717 0124 00080048 		.word	1207961600
 718 0128 00040048 		.word	1207960576
 719 012c B80B0000 		.word	3000
 720              		.cfi_endproc
 721              	.LFE40:
 723              		.section	.text.init_LCD,"ax",%progbits
 724              		.align	1
 725              		.global	init_LCD
 726              		.syntax unified
 727              		.code	16
 728              		.thumb_func
 730              	init_LCD:
 731              	.LFB41:
 168:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 732              		.loc 2 168 1 is_stmt 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 10B5     		push	{r4, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 4, -8
 739              		.cfi_offset 14, -4
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 740              		.loc 2 169 5 view .LVU190
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 741              		.loc 2 169 8 is_stmt 0 view .LVU191
 742 0002 1B4B     		ldr	r3, .L51
 743 0004 5969     		ldr	r1, [r3, #20]
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 744              		.loc 2 169 17 view .LVU192
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 23


 745 0006 8022     		movs	r2, #128
 746 0008 9202     		lsls	r2, r2, #10
 747 000a 0A43     		orrs	r2, r1
 748 000c 5A61     		str	r2, [r3, #20]
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 749              		.loc 2 170 5 is_stmt 1 view .LVU193
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 750              		.loc 2 170 8 is_stmt 0 view .LVU194
 751 000e 5969     		ldr	r1, [r3, #20]
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 752              		.loc 2 170 17 view .LVU195
 753 0010 8022     		movs	r2, #128
 754 0012 D202     		lsls	r2, r2, #11
 755 0014 0A43     		orrs	r2, r1
 756 0016 5A61     		str	r2, [r3, #20]
 171:Core/Inc/lcd_stm32f0.c **** 
 757              		.loc 2 171 5 is_stmt 1 view .LVU196
 171:Core/Inc/lcd_stm32f0.c **** 
 758              		.loc 2 171 8 is_stmt 0 view .LVU197
 759 0018 5969     		ldr	r1, [r3, #20]
 171:Core/Inc/lcd_stm32f0.c **** 
 760              		.loc 2 171 17 view .LVU198
 761 001a 8022     		movs	r2, #128
 762 001c 1203     		lsls	r2, r2, #12
 763 001e 0A43     		orrs	r2, r1
 764 0020 5A61     		str	r2, [r3, #20]
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 765              		.loc 2 173 5 is_stmt 1 view .LVU199
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 766              		.loc 2 173 10 is_stmt 0 view .LVU200
 767 0022 9022     		movs	r2, #144
 768 0024 D205     		lsls	r2, r2, #23
 769 0026 1168     		ldr	r1, [r2]
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 770              		.loc 2 173 18 view .LVU201
 771 0028 8223     		movs	r3, #130
 772 002a DB05     		lsls	r3, r3, #23
 773 002c 0B43     		orrs	r3, r1
 774 002e 1360     		str	r3, [r2]
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 775              		.loc 2 174 5 is_stmt 1 view .LVU202
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 776              		.loc 2 174 10 is_stmt 0 view .LVU203
 777 0030 104A     		ldr	r2, .L51+4
 778 0032 1168     		ldr	r1, [r2]
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 779              		.loc 2 174 18 view .LVU204
 780 0034 A023     		movs	r3, #160
 781 0036 DB02     		lsls	r3, r3, #11
 782 0038 0B43     		orrs	r3, r1
 783 003a 1360     		str	r3, [r2]
 175:Core/Inc/lcd_stm32f0.c **** 
 784              		.loc 2 175 5 is_stmt 1 view .LVU205
 175:Core/Inc/lcd_stm32f0.c **** 
 785              		.loc 2 175 10 is_stmt 0 view .LVU206
 786 003c 0E4A     		ldr	r2, .L51+8
 787 003e 1168     		ldr	r1, [r2]
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 24


 175:Core/Inc/lcd_stm32f0.c **** 
 788              		.loc 2 175 18 view .LVU207
 789 0040 A023     		movs	r3, #160
 790 0042 DB05     		lsls	r3, r3, #23
 791 0044 0B43     		orrs	r3, r1
 792 0046 1360     		str	r3, [r2]
 177:Core/Inc/lcd_stm32f0.c **** 
 793              		.loc 2 177 5 is_stmt 1 view .LVU208
 794 0048 0C48     		ldr	r0, .L51+12
 795 004a FFF7FEFF 		bl	delay
 796              	.LVL28:
 179:Core/Inc/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 797              		.loc 2 179 5 view .LVU209
 798 004e 3320     		movs	r0, #51
 799 0050 FFF7FEFF 		bl	lcd_command
 800              	.LVL29:
 180:Core/Inc/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 801              		.loc 2 180 5 view .LVU210
 802 0054 3220     		movs	r0, #50
 803 0056 FFF7FEFF 		bl	lcd_command
 804              	.LVL30:
 181:Core/Inc/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 805              		.loc 2 181 5 view .LVU211
 806 005a 0C20     		movs	r0, #12
 807 005c FFF7FEFF 		bl	lcd_command
 808              	.LVL31:
 182:Core/Inc/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 809              		.loc 2 182 5 view .LVU212
 810 0060 2820     		movs	r0, #40
 811 0062 FFF7FEFF 		bl	lcd_command
 812              	.LVL32:
 183:Core/Inc/lcd_stm32f0.c **** }
 813              		.loc 2 183 5 view .LVU213
 814 0066 0120     		movs	r0, #1
 815 0068 FFF7FEFF 		bl	lcd_command
 816              	.LVL33:
 184:Core/Inc/lcd_stm32f0.c **** 
 817              		.loc 2 184 1 is_stmt 0 view .LVU214
 818              		@ sp needed
 819 006c 10BD     		pop	{r4, pc}
 820              	.L52:
 821 006e C046     		.align	2
 822              	.L51:
 823 0070 00100240 		.word	1073876992
 824 0074 00040048 		.word	1207960576
 825 0078 00080048 		.word	1207961600
 826 007c 30750000 		.word	30000
 827              		.cfi_endproc
 828              	.LFE41:
 830              		.section	.text.Error_Handler,"ax",%progbits
 831              		.align	1
 832              		.global	Error_Handler
 833              		.syntax unified
 834              		.code	16
 835              		.thumb_func
 837              	Error_Handler:
 838              	.LFB49:
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 25


   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** #include <lcd_stm32f0.c>
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** //JUSTIN - START 1/3
  49:Core/Src/main.c **** uint16_t adc_value;
  50:Core/Src/main.c **** uint16_t adc_value1;
  51:Core/Src/main.c **** uint16_t adc_value2;
  52:Core/Src/main.c **** uint8_t channel = 0;
  53:Core/Src/main.c **** //JUSTIN - END
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 26


  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_ADC_Init();
  97:Core/Src/main.c ****   init_LCD();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Infinite loop */
 103:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 104:Core/Src/main.c ****   while (1)
 105:Core/Src/main.c ****   {
 106:Core/Src/main.c ****     /* USER CODE END WHILE */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 109:Core/Src/main.c ****     //JUSTIN - START 2/3
 110:Core/Src/main.c ****    ADC1-> CHSELR= ADC_CHSELR_CHSEL0;
 111:Core/Src/main.c ****     HAL_Delay(10);
 112:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 113:Core/Src/main.c ****     HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,RESET);
 114:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,5)!= HAL_OK);
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 27


 115:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 116:Core/Src/main.c ****     if(adc_value<2200) {
 117:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,SET);
 118:Core/Src/main.c ****     } else {
 119:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,RESET);
 120:Core/Src/main.c ****     }
 121:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 122:Core/Src/main.c ****     
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     ADC1->CHSELR=ADC_CHSELR_CHSEL1;
 127:Core/Src/main.c ****     HAL_Delay(10);
 128:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 129:Core/Src/main.c ****     HAL_GPIO_WritePin(LED6_GPIO_Port,LED6_Pin,RESET);
 130:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,5)!= HAL_OK);
 131:Core/Src/main.c ****     adc_value1 = HAL_ADC_GetValue(&hadc);
 132:Core/Src/main.c ****     if(adc_value1<2000) {
 133:Core/Src/main.c ****       HAL_GPIO_WritePin(LED6_GPIO_Port,LED6_Pin,SET);
 134:Core/Src/main.c ****     } else {
 135:Core/Src/main.c ****       HAL_GPIO_WritePin(LED6_GPIO_Port,LED6_Pin,RESET);
 136:Core/Src/main.c ****     }
 137:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****    ADC1->CHSELR=ADC_CHSELR_CHSEL2;
 142:Core/Src/main.c ****     HAL_Delay(10);
 143:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 144:Core/Src/main.c ****     HAL_GPIO_WritePin(LED5_GPIO_Port,LED5_Pin,RESET);
 145:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,5)!= HAL_OK);
 146:Core/Src/main.c ****     adc_value2 = HAL_ADC_GetValue(&hadc);
 147:Core/Src/main.c ****     if(adc_value2<2200) {
 148:Core/Src/main.c ****       HAL_GPIO_WritePin(LED5_GPIO_Port,LED5_Pin,SET);
 149:Core/Src/main.c ****     } else {
 150:Core/Src/main.c ****       HAL_GPIO_WritePin(LED5_GPIO_Port,LED5_Pin,RESET);
 151:Core/Src/main.c ****     }
 152:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 153:Core/Src/main.c ****     lcd_command(CLEAR);
 154:Core/Src/main.c ****    char str[50]; // Assuming a sufficient buffer size for the resulting string
 155:Core/Src/main.c **** char str2[12];
 156:Core/Src/main.c **** char str_adc_value[10]; // Assuming a sufficient buffer size for the ADC value
 157:Core/Src/main.c **** char str_adc_value1[10]; // Assuming a sufficient buffer size for the ADC value
 158:Core/Src/main.c **** char str_adc_value2[10]; // Assuming a sufficient buffer size for the ADC value
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** // Convert numerical values to strings
 161:Core/Src/main.c **** sprintf(str_adc_value, "%d", adc_value);
 162:Core/Src/main.c **** sprintf(str_adc_value1, "%d", adc_value1);
 163:Core/Src/main.c **** sprintf(str_adc_value2, "%d", adc_value2);
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** // Concatenate strings and pass them to lcd_putstring
 166:Core/Src/main.c **** lcd_putstring("LO:");
 167:Core/Src/main.c **** lcd_putstring(str_adc_value);
 168:Core/Src/main.c **** lcd_putstring(" MO:");
 169:Core/Src/main.c **** lcd_putstring(str_adc_value1);
 170:Core/Src/main.c **** lcd_command(LINE_TWO);
 171:Core/Src/main.c **** lcd_putstring("RO:");
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 28


 172:Core/Src/main.c **** lcd_putstring(str_adc_value2);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****     //JUSTIN - END
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c ****   /* USER CODE END 3 */
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /**
 184:Core/Src/main.c ****   * @brief System Clock Configuration
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** void SystemClock_Config(void)
 188:Core/Src/main.c **** {
 189:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 190:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 193:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 201:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 202:Core/Src/main.c ****   {
 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 209:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 221:Core/Src/main.c **** //JUSTIN - START 3/3
 222:Core/Src/main.c **** /* I took this code from the adc.c file - In the init section.
 223:Core/Src/main.c **** * Regrettably setting up the ADC for reading multiple channels is not great without using DMA (scar
 224:Core/Src/main.c **** * So you would need to just look at that file and work out how to modify your set channel according
 225:Core/Src/main.c **** */
 226:Core/Src/main.c **** void adc_set_channel(uint8_t num) {
 227:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 228:Core/Src/main.c **** 
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 29


 229:Core/Src/main.c ****     if (num>0) {
 230:Core/Src/main.c ****       sConfig.Channel = ADC_CHANNEL_5;
 231:Core/Src/main.c ****     } else {
 232:Core/Src/main.c ****       sConfig.Channel = ADC_CHANNEL_6;
 233:Core/Src/main.c ****     }
 234:Core/Src/main.c ****     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 235:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 236:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 237:Core/Src/main.c ****     {
 238:Core/Src/main.c ****       Error_Handler();
 239:Core/Src/main.c ****     }
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** //JUSTIN - END
 242:Core/Src/main.c **** /* USER CODE END 4 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /**
 245:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** void Error_Handler(void)
 249:Core/Src/main.c **** {
 839              		.loc 1 249 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ Volatile: function does not return.
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 250:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 251:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 252:Core/Src/main.c ****   __disable_irq();
 845              		.loc 1 252 3 view .LVU216
 846              	.LBB4:
 847              	.LBI4:
 848              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 30


  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 31


  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 32


 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 849              		.loc 3 140 27 view .LVU217
 850              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 851              		.loc 3 142 3 view .LVU218
 852              		.syntax divided
 853              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 854 0000 72B6     		cpsid i
 855              	@ 0 "" 2
 856              		.thumb
 857              		.syntax unified
 858              	.L54:
 859              	.LBE5:
 860              	.LBE4:
 253:Core/Src/main.c ****   while (1)
 861              		.loc 1 253 3 view .LVU219
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****   }
 862              		.loc 1 255 3 view .LVU220
 253:Core/Src/main.c ****   while (1)
 863              		.loc 1 253 9 view .LVU221
 864 0002 FEE7     		b	.L54
 865              		.cfi_endproc
 866              	.LFE49:
 868              		.section	.text.SystemClock_Config,"ax",%progbits
 869              		.align	1
 870              		.global	SystemClock_Config
 871              		.syntax unified
 872              		.code	16
 873              		.thumb_func
 875              	SystemClock_Config:
 876              	.LFB47:
 188:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 877              		.loc 1 188 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 64
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881 0000 10B5     		push	{r4, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 4, -8
 884              		.cfi_offset 14, -4
 885 0002 90B0     		sub	sp, sp, #64
 886              		.cfi_def_cfa_offset 72
 189:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 887              		.loc 1 189 3 view .LVU223
 189:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 888              		.loc 1 189 22 is_stmt 0 view .LVU224
 889 0004 3022     		movs	r2, #48
 890 0006 0021     		movs	r1, #0
 891 0008 04A8     		add	r0, sp, #16
 892 000a FFF7FEFF 		bl	memset
 893              	.LVL34:
 190:Core/Src/main.c **** 
 894              		.loc 1 190 3 is_stmt 1 view .LVU225
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 33


 190:Core/Src/main.c **** 
 895              		.loc 1 190 22 is_stmt 0 view .LVU226
 896 000e 1024     		movs	r4, #16
 897 0010 1022     		movs	r2, #16
 898 0012 0021     		movs	r1, #0
 899 0014 6846     		mov	r0, sp
 900 0016 FFF7FEFF 		bl	memset
 901              	.LVL35:
 195:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 902              		.loc 1 195 3 is_stmt 1 view .LVU227
 195:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 903              		.loc 1 195 36 is_stmt 0 view .LVU228
 904 001a 1223     		movs	r3, #18
 905 001c 0493     		str	r3, [sp, #16]
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 906              		.loc 1 196 3 is_stmt 1 view .LVU229
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 907              		.loc 1 196 30 is_stmt 0 view .LVU230
 908 001e 113B     		subs	r3, r3, #17
 909 0020 0793     		str	r3, [sp, #28]
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 910              		.loc 1 197 3 is_stmt 1 view .LVU231
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 911              		.loc 1 197 32 is_stmt 0 view .LVU232
 912 0022 0993     		str	r3, [sp, #36]
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 913              		.loc 1 198 3 is_stmt 1 view .LVU233
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 914              		.loc 1 198 41 is_stmt 0 view .LVU234
 915 0024 0894     		str	r4, [sp, #32]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 916              		.loc 1 199 3 is_stmt 1 view .LVU235
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 917              		.loc 1 199 43 is_stmt 0 view .LVU236
 918 0026 0A94     		str	r4, [sp, #40]
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 919              		.loc 1 200 3 is_stmt 1 view .LVU237
 201:Core/Src/main.c ****   {
 920              		.loc 1 201 3 view .LVU238
 201:Core/Src/main.c ****   {
 921              		.loc 1 201 7 is_stmt 0 view .LVU239
 922 0028 04A8     		add	r0, sp, #16
 923 002a FFF7FEFF 		bl	HAL_RCC_OscConfig
 924              	.LVL36:
 201:Core/Src/main.c ****   {
 925              		.loc 1 201 6 discriminator 1 view .LVU240
 926 002e 0028     		cmp	r0, #0
 927 0030 0DD1     		bne	.L58
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 928              		.loc 1 208 3 is_stmt 1 view .LVU241
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 929              		.loc 1 208 31 is_stmt 0 view .LVU242
 930 0032 0723     		movs	r3, #7
 931 0034 0093     		str	r3, [sp]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 932              		.loc 1 210 3 is_stmt 1 view .LVU243
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 34


 933              		.loc 1 210 34 is_stmt 0 view .LVU244
 934 0036 0023     		movs	r3, #0
 935 0038 0193     		str	r3, [sp, #4]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 936              		.loc 1 211 3 is_stmt 1 view .LVU245
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 937              		.loc 1 211 35 is_stmt 0 view .LVU246
 938 003a 0293     		str	r3, [sp, #8]
 212:Core/Src/main.c **** 
 939              		.loc 1 212 3 is_stmt 1 view .LVU247
 212:Core/Src/main.c **** 
 940              		.loc 1 212 36 is_stmt 0 view .LVU248
 941 003c 0393     		str	r3, [sp, #12]
 214:Core/Src/main.c ****   {
 942              		.loc 1 214 3 is_stmt 1 view .LVU249
 214:Core/Src/main.c ****   {
 943              		.loc 1 214 7 is_stmt 0 view .LVU250
 944 003e 0021     		movs	r1, #0
 945 0040 6846     		mov	r0, sp
 946 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 947              	.LVL37:
 214:Core/Src/main.c ****   {
 948              		.loc 1 214 6 discriminator 1 view .LVU251
 949 0046 0028     		cmp	r0, #0
 950 0048 03D1     		bne	.L59
 218:Core/Src/main.c **** 
 951              		.loc 1 218 1 view .LVU252
 952 004a 10B0     		add	sp, sp, #64
 953              		@ sp needed
 954 004c 10BD     		pop	{r4, pc}
 955              	.L58:
 203:Core/Src/main.c ****   }
 956              		.loc 1 203 5 is_stmt 1 view .LVU253
 957 004e FFF7FEFF 		bl	Error_Handler
 958              	.LVL38:
 959              	.L59:
 216:Core/Src/main.c ****   }
 960              		.loc 1 216 5 view .LVU254
 961 0052 FFF7FEFF 		bl	Error_Handler
 962              	.LVL39:
 963              		.cfi_endproc
 964              	.LFE47:
 966              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 967              		.align	2
 968              	.LC4:
 969 0000 256400   		.ascii	"%d\000"
 970 0003 00       		.align	2
 971              	.LC6:
 972 0004 4C4F3A00 		.ascii	"LO:\000"
 973              		.align	2
 974              	.LC8:
 975 0008 204D4F3A 		.ascii	" MO:\000"
 975      00
 976 000d 000000   		.align	2
 977              	.LC10:
 978 0010 524F3A00 		.ascii	"RO:\000"
 979              		.section	.text.main,"ax",%progbits
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 35


 980              		.align	1
 981              		.global	main
 982              		.syntax unified
 983              		.code	16
 984              		.thumb_func
 986              	main:
 987              	.LFB46:
  72:Core/Src/main.c **** 
 988              		.loc 1 72 1 view -0
 989              		.cfi_startproc
 990              		@ Volatile: function does not return.
 991              		@ args = 0, pretend = 0, frame = 40
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993 0000 10B5     		push	{r4, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 4, -8
 996              		.cfi_offset 14, -4
 997 0002 8AB0     		sub	sp, sp, #40
 998              		.cfi_def_cfa_offset 48
  81:Core/Src/main.c **** 
 999              		.loc 1 81 3 view .LVU256
 1000 0004 FFF7FEFF 		bl	HAL_Init
 1001              	.LVL40:
  88:Core/Src/main.c **** 
 1002              		.loc 1 88 3 view .LVU257
 1003 0008 FFF7FEFF 		bl	SystemClock_Config
 1004              	.LVL41:
  95:Core/Src/main.c ****   MX_ADC_Init();
 1005              		.loc 1 95 3 view .LVU258
 1006 000c FFF7FEFF 		bl	MX_GPIO_Init
 1007              	.LVL42:
  96:Core/Src/main.c ****   init_LCD();
 1008              		.loc 1 96 3 view .LVU259
 1009 0010 FFF7FEFF 		bl	MX_ADC_Init
 1010              	.LVL43:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1011              		.loc 1 97 3 view .LVU260
 1012 0014 FFF7FEFF 		bl	init_LCD
 1013              	.LVL44:
 1014 0018 5FE0     		b	.L70
 1015              	.L62:
 1016              	.LBB6:
 119:Core/Src/main.c ****     }
 1017              		.loc 1 119 7 view .LVU261
 1018 001a 0022     		movs	r2, #0
 1019 001c 8021     		movs	r1, #128
 1020 001e 5848     		ldr	r0, .L71
 1021 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1022              	.LVL45:
 1023 0024 7CE0     		b	.L63
 1024              	.L65:
 135:Core/Src/main.c ****     }
 1025              		.loc 1 135 7 view .LVU262
 1026 0026 0022     		movs	r2, #0
 1027 0028 4021     		movs	r1, #64
 1028 002a 5548     		ldr	r0, .L71
 1029 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 36


 1030              	.LVL46:
 1031              	.L66:
 137:Core/Src/main.c **** 
 1032              		.loc 1 137 5 view .LVU263
 1033 0030 544C     		ldr	r4, .L71+4
 1034 0032 2000     		movs	r0, r4
 1035 0034 FFF7FEFF 		bl	HAL_ADC_Stop
 1036              	.LVL47:
 141:Core/Src/main.c ****     HAL_Delay(10);
 1037              		.loc 1 141 4 view .LVU264
 141:Core/Src/main.c ****     HAL_Delay(10);
 1038              		.loc 1 141 16 is_stmt 0 view .LVU265
 1039 0038 534B     		ldr	r3, .L71+8
 1040 003a 0422     		movs	r2, #4
 1041 003c 9A62     		str	r2, [r3, #40]
 142:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 1042              		.loc 1 142 5 is_stmt 1 view .LVU266
 1043 003e 0A20     		movs	r0, #10
 1044 0040 FFF7FEFF 		bl	HAL_Delay
 1045              	.LVL48:
 143:Core/Src/main.c ****     HAL_GPIO_WritePin(LED5_GPIO_Port,LED5_Pin,RESET);
 1046              		.loc 1 143 5 view .LVU267
 1047 0044 2000     		movs	r0, r4
 1048 0046 FFF7FEFF 		bl	HAL_ADC_Start
 1049              	.LVL49:
 144:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,5)!= HAL_OK);
 1050              		.loc 1 144 5 view .LVU268
 1051 004a 0022     		movs	r2, #0
 1052 004c 2021     		movs	r1, #32
 1053 004e 4C48     		ldr	r0, .L71
 1054 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1055              	.LVL50:
 145:Core/Src/main.c ****     adc_value2 = HAL_ADC_GetValue(&hadc);
 1056              		.loc 1 145 5 view .LVU269
 1057              	.L67:
 145:Core/Src/main.c ****     adc_value2 = HAL_ADC_GetValue(&hadc);
 1058              		.loc 1 145 45 discriminator 1 view .LVU270
 145:Core/Src/main.c ****     adc_value2 = HAL_ADC_GetValue(&hadc);
 1059              		.loc 1 145 11 is_stmt 0 discriminator 1 view .LVU271
 1060 0054 4B48     		ldr	r0, .L71+4
 1061 0056 0521     		movs	r1, #5
 1062 0058 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1063              	.LVL51:
 145:Core/Src/main.c ****     adc_value2 = HAL_ADC_GetValue(&hadc);
 1064              		.loc 1 145 45 discriminator 1 view .LVU272
 1065 005c 0028     		cmp	r0, #0
 1066 005e F9D1     		bne	.L67
 146:Core/Src/main.c ****     if(adc_value2<2200) {
 1067              		.loc 1 146 5 is_stmt 1 view .LVU273
 146:Core/Src/main.c ****     if(adc_value2<2200) {
 1068              		.loc 1 146 18 is_stmt 0 view .LVU274
 1069 0060 4848     		ldr	r0, .L71+4
 1070 0062 FFF7FEFF 		bl	HAL_ADC_GetValue
 1071              	.LVL52:
 146:Core/Src/main.c ****     if(adc_value2<2200) {
 1072              		.loc 1 146 16 discriminator 1 view .LVU275
 1073 0066 80B2     		uxth	r0, r0
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 37


 1074 0068 484B     		ldr	r3, .L71+12
 1075 006a 1880     		strh	r0, [r3]
 147:Core/Src/main.c ****       HAL_GPIO_WritePin(LED5_GPIO_Port,LED5_Pin,SET);
 1076              		.loc 1 147 5 is_stmt 1 view .LVU276
 147:Core/Src/main.c ****       HAL_GPIO_WritePin(LED5_GPIO_Port,LED5_Pin,SET);
 1077              		.loc 1 147 7 is_stmt 0 view .LVU277
 1078 006c 484B     		ldr	r3, .L71+16
 1079 006e 9842     		cmp	r0, r3
 1080 0070 00D9     		bls	.LCB907
 1081 0072 7EE0     		b	.L68	@long jump
 1082              	.LCB907:
 148:Core/Src/main.c ****     } else {
 1083              		.loc 1 148 7 is_stmt 1 view .LVU278
 1084 0074 0122     		movs	r2, #1
 1085 0076 2021     		movs	r1, #32
 1086 0078 4148     		ldr	r0, .L71
 1087 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1088              	.LVL53:
 1089              	.L69:
 152:Core/Src/main.c ****     lcd_command(CLEAR);
 1090              		.loc 1 152 5 view .LVU279
 1091 007e 4148     		ldr	r0, .L71+4
 1092 0080 FFF7FEFF 		bl	HAL_ADC_Stop
 1093              	.LVL54:
 153:Core/Src/main.c ****    char str[50]; // Assuming a sufficient buffer size for the resulting string
 1094              		.loc 1 153 5 view .LVU280
 1095 0084 0120     		movs	r0, #1
 1096 0086 FFF7FEFF 		bl	lcd_command
 1097              	.LVL55:
 154:Core/Src/main.c **** char str2[12];
 1098              		.loc 1 154 4 view .LVU281
 155:Core/Src/main.c **** char str_adc_value[10]; // Assuming a sufficient buffer size for the ADC value
 1099              		.loc 1 155 1 view .LVU282
 156:Core/Src/main.c **** char str_adc_value1[10]; // Assuming a sufficient buffer size for the ADC value
 1100              		.loc 1 156 1 view .LVU283
 157:Core/Src/main.c **** char str_adc_value2[10]; // Assuming a sufficient buffer size for the ADC value
 1101              		.loc 1 157 1 view .LVU284
 158:Core/Src/main.c **** 
 1102              		.loc 1 158 1 view .LVU285
 161:Core/Src/main.c **** sprintf(str_adc_value1, "%d", adc_value1);
 1103              		.loc 1 161 1 view .LVU286
 1104 008a 424B     		ldr	r3, .L71+20
 1105 008c 1A88     		ldrh	r2, [r3]
 1106 008e 424C     		ldr	r4, .L71+24
 1107 0090 2100     		movs	r1, r4
 1108 0092 01A8     		add	r0, sp, #4
 1109 0094 FFF7FEFF 		bl	sprintf
 1110              	.LVL56:
 162:Core/Src/main.c **** sprintf(str_adc_value2, "%d", adc_value2);
 1111              		.loc 1 162 1 view .LVU287
 1112 0098 404B     		ldr	r3, .L71+28
 1113 009a 1A88     		ldrh	r2, [r3]
 1114 009c 2100     		movs	r1, r4
 1115 009e 04A8     		add	r0, sp, #16
 1116 00a0 FFF7FEFF 		bl	sprintf
 1117              	.LVL57:
 163:Core/Src/main.c **** 
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 38


 1118              		.loc 1 163 1 view .LVU288
 1119 00a4 394B     		ldr	r3, .L71+12
 1120 00a6 1A88     		ldrh	r2, [r3]
 1121 00a8 2100     		movs	r1, r4
 1122 00aa 07A8     		add	r0, sp, #28
 1123 00ac FFF7FEFF 		bl	sprintf
 1124              	.LVL58:
 166:Core/Src/main.c **** lcd_putstring(str_adc_value);
 1125              		.loc 1 166 1 view .LVU289
 1126 00b0 3B48     		ldr	r0, .L71+32
 1127 00b2 FFF7FEFF 		bl	lcd_putstring
 1128              	.LVL59:
 167:Core/Src/main.c **** lcd_putstring(" MO:");
 1129              		.loc 1 167 1 view .LVU290
 1130 00b6 01A8     		add	r0, sp, #4
 1131 00b8 FFF7FEFF 		bl	lcd_putstring
 1132              	.LVL60:
 168:Core/Src/main.c **** lcd_putstring(str_adc_value1);
 1133              		.loc 1 168 1 view .LVU291
 1134 00bc 3948     		ldr	r0, .L71+36
 1135 00be FFF7FEFF 		bl	lcd_putstring
 1136              	.LVL61:
 169:Core/Src/main.c **** lcd_command(LINE_TWO);
 1137              		.loc 1 169 1 view .LVU292
 1138 00c2 04A8     		add	r0, sp, #16
 1139 00c4 FFF7FEFF 		bl	lcd_putstring
 1140              	.LVL62:
 170:Core/Src/main.c **** lcd_putstring("RO:");
 1141              		.loc 1 170 1 view .LVU293
 1142 00c8 C020     		movs	r0, #192
 1143 00ca FFF7FEFF 		bl	lcd_command
 1144              	.LVL63:
 171:Core/Src/main.c **** lcd_putstring(str_adc_value2);
 1145              		.loc 1 171 1 view .LVU294
 1146 00ce 3648     		ldr	r0, .L71+40
 1147 00d0 FFF7FEFF 		bl	lcd_putstring
 1148              	.LVL64:
 172:Core/Src/main.c **** 
 1149              		.loc 1 172 1 view .LVU295
 1150 00d4 07A8     		add	r0, sp, #28
 1151 00d6 FFF7FEFF 		bl	lcd_putstring
 1152              	.LVL65:
 1153              	.LBE6:
 104:Core/Src/main.c ****   {
 1154              		.loc 1 104 9 view .LVU296
 1155              	.L70:
 104:Core/Src/main.c ****   {
 1156              		.loc 1 104 3 view .LVU297
 1157              	.LBB7:
 110:Core/Src/main.c ****     HAL_Delay(10);
 1158              		.loc 1 110 4 view .LVU298
 110:Core/Src/main.c ****     HAL_Delay(10);
 1159              		.loc 1 110 17 is_stmt 0 view .LVU299
 1160 00da 2B4B     		ldr	r3, .L71+8
 1161 00dc 0122     		movs	r2, #1
 1162 00de 9A62     		str	r2, [r3, #40]
 111:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 39


 1163              		.loc 1 111 5 is_stmt 1 view .LVU300
 1164 00e0 0A20     		movs	r0, #10
 1165 00e2 FFF7FEFF 		bl	HAL_Delay
 1166              	.LVL66:
 112:Core/Src/main.c ****     HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,RESET);
 1167              		.loc 1 112 5 view .LVU301
 1168 00e6 2748     		ldr	r0, .L71+4
 1169 00e8 FFF7FEFF 		bl	HAL_ADC_Start
 1170              	.LVL67:
 113:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,5)!= HAL_OK);
 1171              		.loc 1 113 5 view .LVU302
 1172 00ec 0022     		movs	r2, #0
 1173 00ee 8021     		movs	r1, #128
 1174 00f0 2348     		ldr	r0, .L71
 1175 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1176              	.LVL68:
 114:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 1177              		.loc 1 114 5 view .LVU303
 1178              	.L61:
 114:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 1179              		.loc 1 114 45 discriminator 1 view .LVU304
 114:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 1180              		.loc 1 114 11 is_stmt 0 discriminator 1 view .LVU305
 1181 00f6 2348     		ldr	r0, .L71+4
 1182 00f8 0521     		movs	r1, #5
 1183 00fa FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1184              	.LVL69:
 114:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 1185              		.loc 1 114 45 discriminator 1 view .LVU306
 1186 00fe 0028     		cmp	r0, #0
 1187 0100 F9D1     		bne	.L61
 115:Core/Src/main.c ****     if(adc_value<2200) {
 1188              		.loc 1 115 5 is_stmt 1 view .LVU307
 115:Core/Src/main.c ****     if(adc_value<2200) {
 1189              		.loc 1 115 17 is_stmt 0 view .LVU308
 1190 0102 2048     		ldr	r0, .L71+4
 1191 0104 FFF7FEFF 		bl	HAL_ADC_GetValue
 1192              	.LVL70:
 115:Core/Src/main.c ****     if(adc_value<2200) {
 1193              		.loc 1 115 15 discriminator 1 view .LVU309
 1194 0108 80B2     		uxth	r0, r0
 1195 010a 224B     		ldr	r3, .L71+20
 1196 010c 1880     		strh	r0, [r3]
 116:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,SET);
 1197              		.loc 1 116 5 is_stmt 1 view .LVU310
 116:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,SET);
 1198              		.loc 1 116 7 is_stmt 0 view .LVU311
 1199 010e 204B     		ldr	r3, .L71+16
 1200 0110 9842     		cmp	r0, r3
 1201 0112 00D9     		bls	.LCB1010
 1202 0114 81E7     		b	.L62	@long jump
 1203              	.LCB1010:
 117:Core/Src/main.c ****     } else {
 1204              		.loc 1 117 7 is_stmt 1 view .LVU312
 1205 0116 0122     		movs	r2, #1
 1206 0118 8021     		movs	r1, #128
 1207 011a 1948     		ldr	r0, .L71
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 40


 1208 011c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1209              	.LVL71:
 1210              	.L63:
 121:Core/Src/main.c ****     
 1211              		.loc 1 121 5 view .LVU313
 1212 0120 184C     		ldr	r4, .L71+4
 1213 0122 2000     		movs	r0, r4
 1214 0124 FFF7FEFF 		bl	HAL_ADC_Stop
 1215              	.LVL72:
 126:Core/Src/main.c ****     HAL_Delay(10);
 1216              		.loc 1 126 5 view .LVU314
 126:Core/Src/main.c ****     HAL_Delay(10);
 1217              		.loc 1 126 17 is_stmt 0 view .LVU315
 1218 0128 174B     		ldr	r3, .L71+8
 1219 012a 0222     		movs	r2, #2
 1220 012c 9A62     		str	r2, [r3, #40]
 127:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 1221              		.loc 1 127 5 is_stmt 1 view .LVU316
 1222 012e 0A20     		movs	r0, #10
 1223 0130 FFF7FEFF 		bl	HAL_Delay
 1224              	.LVL73:
 128:Core/Src/main.c ****     HAL_GPIO_WritePin(LED6_GPIO_Port,LED6_Pin,RESET);
 1225              		.loc 1 128 5 view .LVU317
 1226 0134 2000     		movs	r0, r4
 1227 0136 FFF7FEFF 		bl	HAL_ADC_Start
 1228              	.LVL74:
 129:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,5)!= HAL_OK);
 1229              		.loc 1 129 5 view .LVU318
 1230 013a 0022     		movs	r2, #0
 1231 013c 4021     		movs	r1, #64
 1232 013e 1048     		ldr	r0, .L71
 1233 0140 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1234              	.LVL75:
 130:Core/Src/main.c ****     adc_value1 = HAL_ADC_GetValue(&hadc);
 1235              		.loc 1 130 5 view .LVU319
 1236              	.L64:
 130:Core/Src/main.c ****     adc_value1 = HAL_ADC_GetValue(&hadc);
 1237              		.loc 1 130 45 discriminator 1 view .LVU320
 130:Core/Src/main.c ****     adc_value1 = HAL_ADC_GetValue(&hadc);
 1238              		.loc 1 130 11 is_stmt 0 discriminator 1 view .LVU321
 1239 0144 0F48     		ldr	r0, .L71+4
 1240 0146 0521     		movs	r1, #5
 1241 0148 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1242              	.LVL76:
 130:Core/Src/main.c ****     adc_value1 = HAL_ADC_GetValue(&hadc);
 1243              		.loc 1 130 45 discriminator 1 view .LVU322
 1244 014c 0028     		cmp	r0, #0
 1245 014e F9D1     		bne	.L64
 131:Core/Src/main.c ****     if(adc_value1<2000) {
 1246              		.loc 1 131 5 is_stmt 1 view .LVU323
 131:Core/Src/main.c ****     if(adc_value1<2000) {
 1247              		.loc 1 131 18 is_stmt 0 view .LVU324
 1248 0150 0C48     		ldr	r0, .L71+4
 1249 0152 FFF7FEFF 		bl	HAL_ADC_GetValue
 1250              	.LVL77:
 131:Core/Src/main.c ****     if(adc_value1<2000) {
 1251              		.loc 1 131 16 discriminator 1 view .LVU325
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 41


 1252 0156 80B2     		uxth	r0, r0
 1253 0158 104B     		ldr	r3, .L71+28
 1254 015a 1880     		strh	r0, [r3]
 132:Core/Src/main.c ****       HAL_GPIO_WritePin(LED6_GPIO_Port,LED6_Pin,SET);
 1255              		.loc 1 132 5 is_stmt 1 view .LVU326
 132:Core/Src/main.c ****       HAL_GPIO_WritePin(LED6_GPIO_Port,LED6_Pin,SET);
 1256              		.loc 1 132 7 is_stmt 0 view .LVU327
 1257 015c FA23     		movs	r3, #250
 1258 015e DB00     		lsls	r3, r3, #3
 1259 0160 9842     		cmp	r0, r3
 1260 0162 00D3     		bcc	.LCB1058
 1261 0164 5FE7     		b	.L65	@long jump
 1262              	.LCB1058:
 133:Core/Src/main.c ****     } else {
 1263              		.loc 1 133 7 is_stmt 1 view .LVU328
 1264 0166 0122     		movs	r2, #1
 1265 0168 4021     		movs	r1, #64
 1266 016a 0548     		ldr	r0, .L71
 1267 016c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1268              	.LVL78:
 1269 0170 5EE7     		b	.L66
 1270              	.L68:
 150:Core/Src/main.c ****     }
 1271              		.loc 1 150 7 view .LVU329
 1272 0172 0022     		movs	r2, #0
 1273 0174 2021     		movs	r1, #32
 1274 0176 0248     		ldr	r0, .L71
 1275 0178 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1276              	.LVL79:
 1277 017c 7FE7     		b	.L69
 1278              	.L72:
 1279 017e C046     		.align	2
 1280              	.L71:
 1281 0180 00040048 		.word	1207960576
 1282 0184 00000000 		.word	hadc
 1283 0188 00240140 		.word	1073816576
 1284 018c 00000000 		.word	adc_value2
 1285 0190 97080000 		.word	2199
 1286 0194 00000000 		.word	adc_value
 1287 0198 00000000 		.word	.LC4
 1288 019c 00000000 		.word	adc_value1
 1289 01a0 04000000 		.word	.LC6
 1290 01a4 08000000 		.word	.LC8
 1291 01a8 10000000 		.word	.LC10
 1292              	.LBE7:
 1293              		.cfi_endproc
 1294              	.LFE46:
 1296              		.section	.text.adc_set_channel,"ax",%progbits
 1297              		.align	1
 1298              		.global	adc_set_channel
 1299              		.syntax unified
 1300              		.code	16
 1301              		.thumb_func
 1303              	adc_set_channel:
 1304              	.LVL80:
 1305              	.LFB48:
 226:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 42


 1306              		.loc 1 226 35 view -0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 16
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 226:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 1310              		.loc 1 226 35 is_stmt 0 view .LVU331
 1311 0000 10B5     		push	{r4, lr}
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 4, -8
 1314              		.cfi_offset 14, -4
 1315 0002 84B0     		sub	sp, sp, #16
 1316              		.cfi_def_cfa_offset 24
 1317 0004 0400     		movs	r4, r0
 227:Core/Src/main.c **** 
 1318              		.loc 1 227 5 is_stmt 1 view .LVU332
 227:Core/Src/main.c **** 
 1319              		.loc 1 227 28 is_stmt 0 view .LVU333
 1320 0006 0C22     		movs	r2, #12
 1321 0008 0021     		movs	r1, #0
 1322 000a 01A8     		add	r0, sp, #4
 1323              	.LVL81:
 227:Core/Src/main.c **** 
 1324              		.loc 1 227 28 view .LVU334
 1325 000c FFF7FEFF 		bl	memset
 1326              	.LVL82:
 229:Core/Src/main.c ****       sConfig.Channel = ADC_CHANNEL_5;
 1327              		.loc 1 229 5 is_stmt 1 view .LVU335
 229:Core/Src/main.c ****       sConfig.Channel = ADC_CHANNEL_5;
 1328              		.loc 1 229 8 is_stmt 0 view .LVU336
 1329 0010 002C     		cmp	r4, #0
 1330 0012 0FD0     		beq	.L74
 230:Core/Src/main.c ****     } else {
 1331              		.loc 1 230 7 is_stmt 1 view .LVU337
 230:Core/Src/main.c ****     } else {
 1332              		.loc 1 230 23 is_stmt 0 view .LVU338
 1333 0014 0523     		movs	r3, #5
 1334 0016 0193     		str	r3, [sp, #4]
 1335              	.L75:
 234:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 1336              		.loc 1 234 5 is_stmt 1 view .LVU339
 234:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 1337              		.loc 1 234 18 is_stmt 0 view .LVU340
 1338 0018 8023     		movs	r3, #128
 1339 001a 5B01     		lsls	r3, r3, #5
 1340 001c 0293     		str	r3, [sp, #8]
 235:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1341              		.loc 1 235 5 is_stmt 1 view .LVU341
 235:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1342              		.loc 1 235 26 is_stmt 0 view .LVU342
 1343 001e 8023     		movs	r3, #128
 1344 0020 5B05     		lsls	r3, r3, #21
 1345 0022 0393     		str	r3, [sp, #12]
 236:Core/Src/main.c ****     {
 1346              		.loc 1 236 5 is_stmt 1 view .LVU343
 236:Core/Src/main.c ****     {
 1347              		.loc 1 236 9 is_stmt 0 view .LVU344
 1348 0024 0648     		ldr	r0, .L78
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 43


 1349 0026 01A9     		add	r1, sp, #4
 1350 0028 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1351              	.LVL83:
 236:Core/Src/main.c ****     {
 1352              		.loc 1 236 8 discriminator 1 view .LVU345
 1353 002c 0028     		cmp	r0, #0
 1354 002e 04D1     		bne	.L77
 240:Core/Src/main.c **** //JUSTIN - END
 1355              		.loc 1 240 1 view .LVU346
 1356 0030 04B0     		add	sp, sp, #16
 1357              		@ sp needed
 1358              	.LVL84:
 240:Core/Src/main.c **** //JUSTIN - END
 1359              		.loc 1 240 1 view .LVU347
 1360 0032 10BD     		pop	{r4, pc}
 1361              	.L74:
 232:Core/Src/main.c ****     }
 1362              		.loc 1 232 7 is_stmt 1 view .LVU348
 232:Core/Src/main.c ****     }
 1363              		.loc 1 232 23 is_stmt 0 view .LVU349
 1364 0034 0623     		movs	r3, #6
 1365 0036 0193     		str	r3, [sp, #4]
 1366 0038 EEE7     		b	.L75
 1367              	.L77:
 238:Core/Src/main.c ****     }
 1368              		.loc 1 238 7 is_stmt 1 view .LVU350
 1369 003a FFF7FEFF 		bl	Error_Handler
 1370              	.LVL85:
 1371              	.L79:
 1372 003e C046     		.align	2
 1373              	.L78:
 1374 0040 00000000 		.word	hadc
 1375              		.cfi_endproc
 1376              	.LFE48:
 1378              		.global	channel
 1379              		.section	.bss.channel,"aw",%nobits
 1382              	channel:
 1383 0000 00       		.space	1
 1384              		.global	adc_value2
 1385              		.section	.bss.adc_value2,"aw",%nobits
 1386              		.align	1
 1389              	adc_value2:
 1390 0000 0000     		.space	2
 1391              		.global	adc_value1
 1392              		.section	.bss.adc_value1,"aw",%nobits
 1393              		.align	1
 1396              	adc_value1:
 1397 0000 0000     		.space	2
 1398              		.global	adc_value
 1399              		.section	.bss.adc_value,"aw",%nobits
 1400              		.align	1
 1403              	adc_value:
 1404 0000 0000     		.space	2
 1405              		.text
 1406              	.Letext0:
 1407              		.file 4 "/Users/dichochiramotlou/Library/Application Support/Code/User/globalStorage/bmd.stm32-for
 1408              		.file 5 "/Users/dichochiramotlou/Library/Application Support/Code/User/globalStorage/bmd.stm32-for
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 44


 1409              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1410              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1411              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1412              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1413              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1414              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1415              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 1416              		.file 13 "Core/Inc/adc.h"
 1417              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1418              		.file 15 "Core/Inc/gpio.h"
 1419              		.file 16 "<built-in>"
ARM GAS  /var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:19     .text.delay:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:25     .text.delay:00000000 delay
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:78     .text.pulse_strobe:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:84     .text.pulse_strobe:00000000 pulse_strobe
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:137    .text.pulse_strobe:00000034 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:142    .text.lcd_putchar:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:148    .text.lcd_putchar:00000000 lcd_putchar
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:396    .text.lcd_putchar:0000011c $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:402    .text.lcd_putstring:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:408    .text.lcd_putstring:00000000 lcd_putstring
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:459    .text.lcd_command:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:465    .text.lcd_command:00000000 lcd_command
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:717    .text.lcd_command:00000124 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:724    .text.init_LCD:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:730    .text.init_LCD:00000000 init_LCD
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:823    .text.init_LCD:00000070 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:831    .text.Error_Handler:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:837    .text.Error_Handler:00000000 Error_Handler
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:869    .text.SystemClock_Config:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:875    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:967    .rodata.main.str1.4:00000000 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:980    .text.main:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:986    .text.main:00000000 main
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1281   .text.main:00000180 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1389   .bss.adc_value2:00000000 adc_value2
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1403   .bss.adc_value:00000000 adc_value
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1396   .bss.adc_value1:00000000 adc_value1
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1297   .text.adc_set_channel:00000000 $t
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1303   .text.adc_set_channel:00000000 adc_set_channel
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1374   .text.adc_set_channel:00000040 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1382   .bss.channel:00000000 channel
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1383   .bss.channel:00000000 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1386   .bss.adc_value2:00000000 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1393   .bss.adc_value1:00000000 $d
/var/folders/jx/k8xcm1_95h3_6ft5tr0qmyt80000gn/T//ccNzrOev.s:1400   .bss.adc_value:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC_Init
HAL_GPIO_WritePin
HAL_ADC_Stop
HAL_Delay
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
sprintf
hadc
HAL_ADC_ConfigChannel
